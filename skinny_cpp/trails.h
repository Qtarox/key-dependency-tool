#include "skinny.h"
#include <iostream>


static void conversion(uint8_t alpha[20][4][4],uint8_t trail_rounds,uint8_t key_diff[4][4][4],int size = 4)
{
	uint8_t key_diff_temp[4][4][4];
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff_temp[i][j][k] = key_diff[i][j][k];}}
	if (size == 4) for (int i = 0; i < trail_rounds-1; i++){ key_schedule_round_function(key_diff_temp);}
	else if (size == 8) for (int i = 0; i < trail_rounds-1; i++){ key_schedule_round_function8(key_diff_temp);}
	AddRoundTweakey(alpha[trail_rounds],key_diff_temp);
	SR(alpha[trail_rounds]);
	MC(alpha[trail_rounds]);
}

static bool sanityCheck(uint8_t alpha[20][4][4],uint8_t trail_rounds,uint8_t key_diff[4][4][4],int size)
{
	int DDT4[16][16] = {0};
	computeDDT(DDT4);
	int DDT8[256][256] = {0};
	computeDDT8(DDT8);

	uint8_t key_diff_temp[4][4][4];
	uint8_t state_temp[4][4];
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff_temp[i][j][k] = key_diff[i][j][k];}}
	for (int n = 0; n < trail_rounds; n++)
	{
		for (int r = 0; r < 4; r++){ for (int c = 0; c < 4; c++){ state_temp[r][c] = alpha[n+1][r][c]; }}
		invMC(state_temp); invSR(state_temp); AddRoundTweakey(state_temp,key_diff_temp);
		for (int r = 0; r < 4; r++)
		{
			for (int c = 0; c < 4; c++)
			{
				std::cout << std::hex << int(alpha[n][r][c]) << " ";
			}
			std::cout << "  ";
			for (int c = 0; c < 4; c++)
			{
				std::cout << std::hex << int(state_temp[r][c]) << " ";
			}
			std::cout << "  ";
			for (int c = 0; c < 4; c++)
			{
				std::cout << std::hex << int(key_diff_temp[0][r][c]) << " ";
			}
			std::cout << "  ";
			for (int c = 0; c < 4; c++)
			{
				std::cout << std::hex << int(key_diff_temp[1][r][c]) << " ";
			}
			std::cout << std::endl;
		}
		std::cout << std::endl;
		for (int r = 0; r < 4; r++)
		{
			for (int c = 0; c < 4; c++) 
			{
				if (size == 4) 
				{ 
					if (DDT4[alpha[n][r][c]][state_temp[r][c]] == 0) 
					{
						std::cout << "Error in round: " << n << ", pos: " << 4*r+c << ", input: " << int(alpha[n][r][c]) << ", output: " << int(state_temp[r][c]) << std::endl;
						return false;
					}
				}
				else 
				{ 
					if (DDT8[alpha[n][r][c]][state_temp[r][c]] == 0) 
					{
						std::cout << "Error in round: " << n << ", pos: " << 4*r+c << ", input: " << int(alpha[n][r][c]) << ", output: " << int(state_temp[r][c]) << std::endl;
						return false;
					}
				}
			}
		}
		if (size == 4) key_schedule_round_function(key_diff_temp);
		else key_schedule_round_function8(key_diff_temp);
	}
	return true;
}

void getUpperTrail(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4] ,uint32_t upper_trail_rounds, int &TK_NUM)
{
	if (upper_trail_rounds == 16)
	{
		uint8_t alpha_temp[20][4][4] =  {{{0,0,1,0},{1,1,0,1},{1,0,1,0},{0,1,0,0}}, {{0,0,0,0},{0,0,8,0},{0,8,0,0},{8,0,0,0}}, 
								 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,4}}, {{0,0,2,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								 {{0,0,0,0},{0,0,0,0},{1,0,0,0},{0,0,0,0}}, {{0,0,0xb,0},{0,0,0,0},{0,0,0xb,0},{0,0,0xb,0}},
								 {{1,0,1,0},{0,1,1,0},{1,0,0,0},{1,1,1,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}};
		uint8_t key_diff_temp[4][4][4] = {
		{{0,0,0,0},{0,0,0,0},{0,1,0,0},{0,0,0,0}},
		{{0,0,0,0},{0,0,0,0},{0,0xa,0,0},{0,0,0,0}},
		{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
		{{0,0,0,0},{0,0,0,0},{0,0xa,0,0},{0,0,0,0}}};

		for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
		for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	}
	else if (upper_trail_rounds == 15)
	{
		uint8_t alpha_temp[20][4][4] = {{{0,0,0,0},{0,0,8,0},{0,8,0,0},{8,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,4}},
							    {{0,0,2,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
							    {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
							    {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
							    {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
							    {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
							    {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{1,0,0,0},{0,0,0,0}},
							    {{0,0,0xb,0},{0,0,0,0},{0,0,0xb,0},{0,0,0xb,0}}, {{1,0,1,0},{0,1,1,0},{1,0,0,0},{1,1,1,0}},
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, 
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}};
		uint8_t key_diff_temp[4][4][4] = {
		{{1,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
		{{5,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
		{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
		{{4,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}};
		for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
		for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	}
	else if (upper_trail_rounds == 14)
	{
		uint8_t alpha_temp[20][4][4] = {{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,4,0}}, {{0,2,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								{{0,0,0,0},{0,0,0,0},{0,0,1,0},{0,0,0,0}}, {{0xb,0,0,0},{0,0,0,0},{0xb,0,0,0},{0xb,0,0,0}},
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								{{1,0,1,0},{1,0,0,1},{0,0,1,0},{1,0,1,1}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, 
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}};
		uint8_t key_diff_temp[4][4][4] = {
		{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,1}},
		{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,5}},
		{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
		{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,4}}};
		for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
		for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	}
	else {exit(0);}
	if (!sanityCheck(alpha,upper_trail_rounds,key_diff,4))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
	TK_NUM = 4;
	
}

void getLowerTrail(uint8_t gamma[20][4][4], uint8_t key_diff[4][4][4] ,uint32_t lower_trail_rounds, int &TK_NUM)
{
	if (lower_trail_rounds == 16)
	{
		uint8_t gamma_temp[20][4][4] =  {{{0,0,1,0},{1,1,0,1},{1,0,1,0},{0,1,0,0}}, {{0,0,0,0},{0,0,8,0},{0,8,0,0},{8,0,0,0}}, 
								 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,4}}, {{0,0,2,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								 {{0,0,0,0},{0,0,0,0},{1,0,0,0},{0,0,0,0}}, {{0,0,0xb,0},{0,0,0,0},{0,0,0xb,0},{0,0,0xb,0}},
								 {{1,0,1,0},{0,1,1,0},{1,0,0,0},{1,1,1,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}};
		uint8_t key_diff_temp[4][4][4] = {
		{{0,0,0,0},{0,0,0,0},{0,1,0,0},{0,0,0,0}},
		{{0,0,0,0},{0,0,0,0},{0,0xa,0,0},{0,0,0,0}},
		{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
		{{0,0,0,0},{0,0,0,0},{0,0xa,0,0},{0,0,0,0}}};

		for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {gamma[r][i][j] = gamma_temp[r][i][j];}}}
		for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	}
	else if (lower_trail_rounds == 15)
	{
		uint8_t gamma_temp[20][4][4] = {{{0,0,0,0},{0,0,8,0},{0,8,0,0},{8,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,4}},
							    {{0,0,2,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
							    {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
							    {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
							    {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
							    {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
							    {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{1,0,0,0},{0,0,0,0}},
							    {{0,0,0xb,0},{0,0,0,0},{0,0,0xb,0},{0,0,0xb,0}}, {{1,0,1,0},{0,1,1,0},{1,0,0,0},{1,1,1,0}},
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, 
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}};
		uint8_t key_diff_temp[4][4][4] = {
		{{1,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
		{{5,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
		{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
		{{4,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}};
		for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {gamma[r][i][j] = gamma_temp[r][i][j];}}}
		for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	}
	else if (lower_trail_rounds == 14)
	{
		uint8_t gamma_temp[20][4][4] = {{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,4,0}}, {{0,2,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								{{0,0,0,0},{0,0,0,0},{0,0,1,0},{0,0,0,0}}, {{0xb,0,0,0},{0,0,0,0},{0xb,0,0,0},{0xb,0,0,0}},
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								{{1,0,1,0},{1,0,0,1},{0,0,1,0},{1,0,1,1}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, 
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}};
		uint8_t key_diff_temp[4][4][4] = {
		{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,1}},
		{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,5}},
		{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
		{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,4}}};
		for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {gamma[r][i][j] = gamma_temp[r][i][j];}}}
		for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	}
	else {exit(0);}
	TK_NUM = 4;
	if (!sanityCheck(gamma,lower_trail_rounds,key_diff,4))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}

void TK3_2016_1108(uint8_t alpha[20][4][4], uint8_t key_diff_1[4][4][4] ,uint32_t &upper_trail_rounds, int &TK_NUM,
							uint8_t gamma[20][4][4], uint8_t key_diff_2[4][4][4] ,uint32_t &lower_trail_rounds)
{
	// https://eprint.iacr.org/2016/1108.pdf
	upper_trail_rounds = 11;
	uint8_t alpha_temp[20][4][4] = {{{0,2,0,0},{1,0,0,0},{0,0,0,1},{0,0,1,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0xb,0,0}},
									{{1,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,8},{0,0,0,0}},
									{{0,4,0,0},{0,0,0,0},{0,4,0,0},{0,4,0,0}},
									{{2,2,0,2},{0,2,0,0},{0,0,5,2},{0,2,0,2}}};
	uint8_t key_diff_temp1[4][4][4] = {{{0,0xa,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									   {{0,0x2,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									   {{0,0xd,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									   {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff_1[i][j][k] = key_diff_temp1[i][j][k];}}

	uint8_t gamma_temp[20][4][4] = {{{0,2,0,0},{1,0,0,0},{0,0,0,1},{0,0,1,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0xb,0,0}},
									{{1,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,8},{0,0,0,0}},
									{{0,4,0,0},{0,0,0,0},{0,4,0,0},{0,4,0,0}},
									{{2,2,0,2},{0,2,0,0},{0,0,5,2},{0,2,0,2}}};
	uint8_t key_diff_temp2[4][4][4] = {{{0,0xa,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									   {{0,0x2,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									   {{0,0xd,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									   {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {gamma[r][i][j] = gamma_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff_2[i][j][k] = key_diff_temp2[i][j][k];}}
	TK_NUM = 3;
	if ((!sanityCheck(alpha,upper_trail_rounds,key_diff_1,4)) && (!sanityCheck(gamma,lower_trail_rounds,key_diff_2,4)))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}



void TK2_2016_1108(uint8_t alpha[20][4][4], uint8_t key_diff_1[4][4][4] ,uint32_t &upper_trail_rounds, int &TK_NUM,
							uint8_t gamma[20][4][4], uint8_t key_diff_2[4][4][4] ,uint32_t &lower_trail_rounds)
{
	// https://eprint.iacr.org/2016/1108.pdf
	upper_trail_rounds = 8;
	uint8_t alpha_temp[20][4][4] = {{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,1}}, {{0,0,8,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								{{0,0,0,0},{0,0,0,0},{0,0,0,0xb},{0,0,0,0}}, {{0,1,0,0},{0,0,0,0},{0,1,0,0},{0,1,0,0}},
								{{8,8,0,8},{0,8,0,0},{0,0,0xc,8},{0,8,0,8}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, 
								{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}};
	uint8_t key_diff_temp1[4][4][4] = {
	{{0,0,0,0},{0,0,0,0},{6,0,0,0},{0,0,0,0}},
	{{0,0,0,0},{0,0,0,0},{9,0,0,0},{0,0,0,0}},
	{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
	{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff_1[i][j][k] = key_diff_temp1[i][j][k];}}
	
	lower_trail_rounds = 9;
	uint8_t gamma_temp[20][4][4] = {{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,2}}, {{0,0,0,0},{0,0,3,0},{0,0,0,0},{0,0,3,0}},
									 {{0,0xc,0,0},{0,0,0,0},{0,0,0,4},{0,0,0,0}}, {{0,0,0,0},{0,2,0,0},{0,0,0,0},{0,0,0,0}},
									 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,4,0},{0,0,0,0}},
									 {{2,0,0,0},{0,0,0,0},{0,0,0,0},{2,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}};
	uint8_t key_diff_temp2[4][4][4] = {
	{{0,0,0xc,0},{0,0,0,0},{0,0,0,0},{0xe,0,0,0}},
	{{0,0,0xf,0},{0,0,0,0},{0,0,0,0},{0xb,0,0,0}},
	{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
	{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {gamma[r][i][j] = gamma_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff_2[i][j][k] = key_diff_temp2[i][j][k];}}
	TK_NUM = 2;
	if ((!sanityCheck(alpha,upper_trail_rounds,key_diff_1,4)) && (!sanityCheck(gamma,lower_trail_rounds,key_diff_2,4)))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}
/*
 Differential Characterisitics only!
*/
void SK_2020_1402(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4] ,uint32_t& trail_rounds, int &TK_NUM)
{
	// ########## SK from https://eprint.iacr.org/2020/1402.pdf (1/(2^6) keys allow this trail to pass)
	// https://eprint.iacr.org/2020/1402.pdf
	trail_rounds = 7;
	uint8_t alpha_temp[20][4][4] = {{{0,0,4,0},{4,4,4,4},{4,4,4,0},{4,4,0,0}}, {{0,0,0,0},{0,0,2,0},{0,2,0,0},{2,0,0,2}},
									{{0,0,1,0},{0,0,0,0},{0,0,0,0},{0,0,0,1}}, {{0,0,0,0},{0,0,8,0},{0,0,0,0},{0,0,8,0}},
									{{0,4,0,0},{0,0,0,0},{0,0,0,4},{0,0,0,0}}, {{0,0,0,0},{0,2,0,0},{0,2,0,0},{0,0,0,0}},
									{{0,0,0,1},{0,0,0,0},{0,0,1,1},{0,0,0,1}}, {{8,8,8,8},{0,0,0,8},{8,8,0,0},{8,8,0,8}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}};
	uint8_t key_diff_temp[4][4][4] = {{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									  {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									  {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									  {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}};
    for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}	
	TK_NUM = 1;								 
}

void TK1_2020_1402(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4] ,uint32_t& trail_rounds, int &TK_NUM)
{
	// ########## TK1 from https://eprint.iacr.org/2020/1402.pdf (This trail is impossible)
	// https://eprint.iacr.org/2020/1402.pdf
	trail_rounds = 10;
	uint8_t alpha_temp[20][4][4] = {{{0,0,0,0},{0,0,0,2},{0,0,2,0},{0,2,0,0}}, {{1,0,0,0},{1,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,1,0},{0,0,1,0},{0,0,0,0},{0,0,1,0}},
									{{0,0xb,0,0},{0,0,0,0},{0,0,0,2},{0,0,0,0}}, {{0,0,0,0},{0,1,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0xb,0,0},{0,0,0,0}}, {{0,0,0,1},{0,0,0,0},{0,0,0,0},{0,0,0,1}},
									{{0,0,8,0},{0,0,0,0},{0,0,0,0xb},{0,0,0,0}}, {{0,1,4,0},{0,0,4,0},{0,1,1,0},{0,1,4,0}},
									{{0,0xa,2,8},{0,8,2,0},{0,0,0xb,0xa},{8,8,2,8}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}};
	uint8_t key_diff_temp[4][4][4] = {{{1,0,0,0},{0,0,0,0},{0,0xb,8,0},{0,0,0,0}}, 
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}};
    for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}	
	TK_NUM = 1;		
	if (!sanityCheck(alpha,trail_rounds,key_diff,4))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}						 
}



void TK2_2020_1402(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4] ,uint32_t& trail_rounds, int &TK_NUM)
{
	// ########## TK2 from https://eprint.iacr.org/2020/1402.pdf (1/2^4) keys allow this trail to pass
	// https://eprint.iacr.org/2020/1402.pdf
	trail_rounds = 13;
	uint8_t alpha_temp[20][4][4] = {{{0,0,0,0},{8,2,0,0},{0,0,8,0},{0,0,0,0}}, {{4,0,0,0},{0,0,0,0},{0,4,1,0},{4,0,0,0}},
									 {{0,0,0,0},{0xa,0,0,0},{0,0,0,2},{0,0,0,2}}, {{0,6,3,0},{0,0,0,0},{0,0,0,0},{0,6,0,0}},
									 {{1,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0xa,0},{0,0,0xa,0},{0,0,0,0},{0,0,0xa,0}},
									 {{0,5,0,0},{0,0,0,0},{0,0,0,0xb},{0,0,0,0}}, {{0,0,0,0},{0,0xc,0,0},{0,0,0,0},{0,0,0,0}},
									 {{0,0,0,0},{0,0,0,0},{0,0xb,0,0},{0,0,0,0}}, {{0,0,0,1},{0,0,0,0},{0,0,0,0},{0,0,0,1}},
									 {{0,0,8,0},{0,0,0,0},{0,0,0,1},{0,0,0,0}}, {{0,8,4,0},{0,0,4,0},{0,8,0xb,0},{0,8,4,0}},
									 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									 {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}};
	uint8_t key_diff_temp[4][4][4] = {{{0,0,0,0},{0,0,0,8},{0,5,0,2},{0,0,0,0}},
 									  {{0,0,0,0},{0,0,0,0xc},{0,6,0,0xc},{0,0,0,0}},
									  {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									  {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	TK_NUM = 2;
	if (!sanityCheck(alpha,trail_rounds,key_diff,4))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}

void TK3_2020_1402(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4] ,uint32_t& trail_rounds, int &TK_NUM)
{
	// ########## TK3 from https://eprint.iacr.org/2020/1402.pdf (1/2^5) keys allow this trail to pass
	// https://eprint.iacr.org/2020/1402.pdf
	trail_rounds = 15;
	uint8_t alpha_temp[20][4][4] = {{{0,0,0,0},{0,0,0,1},{4,0,0,0},{0,0,0,4}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,2,0}},
									{{0,1,0,0xd},{0,0,0,0xd},{0,0,0,0},{0,0,0,0xd}}, {{0,0,2,0},{0,0,0,0},{2,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,3,0},{0,0,3,0},{0,0,0,0}}, {{0,0,0,0},{0xc,0,0,0},{0,0,0,0xc},{0,0,0,0}},
									{{0,2,0,0},{0,0,0,0},{0,0,0,0},{0,2,0,0}}, {{3,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,1,0},{0,0,1,0},{0,0,0,0},{0,0,1,0}}, {{0,0xa,0,0},{0,0,0,0},{0,0,0,5},{0,0,0,0}},
									{{0,0,0,0},{0,0xa,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,4},{0,0,0,0}}, {{0,2,0,8},{0,0,0,8},{0,2,0,5},{0,2,0,8}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},
									{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}, {{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}};
	uint8_t key_diff_temp[4][4][4] = {{{0,0,0,0},{0,8,0,0xd},{0,0,0,0},{0,8,0,0}},
										{{0,0,0,0},{0,4,0,8},{0,0,0,0},{0,5,0,0}},
										{{0,0,0,0},{0,0xe,0,0xd},{0,0,0,0},{0,0xc,0,0}},
										{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	TK_NUM = 3;
	if (!sanityCheck(alpha,trail_rounds,key_diff,4))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}


void get_4TK2_1_17_L_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	trail_rounds = 11;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x5,0x1,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x1,0x0,0x0},{0x0,0x5,0x0,0x4}},
	{{0x0,0xA,0x2,0xA},{0xA,0xA,0x0,0x0},{0x0,0x0,0x0,0xA},{0xA,0xA,0x0,0xA}},
	{{0x5,0x0,0x0,0x0},{0x0,0x5,0x5,0x5},{0xC,0x0,0x5,0x0},{0x0,0x0,0x5,0x5}},
	{{0x0,0xA,0x0,0x0},{0x2,0x0,0x0,0x0},{0x0,0x0,0x0,0x2},{0x0,0x0,0x2,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x1,0x0,0x0}},
	{{0xA,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0xD,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t alpha_after_temp[20][4][4] = {
	{{0xA,0xA,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0xA,0x0,0x0},{0x0,0xA,0x0,0x2}},
	{{0x0,0x5,0x5,0x5},{0x5,0x5,0x0,0x0},{0x0,0x0,0x0,0x5},{0x5,0x5,0x0,0x5}},
	{{0x2,0x0,0x0,0x0},{0x0,0x2,0x2,0x2},{0x2,0x0,0x2,0x0},{0x0,0x0,0xA,0x2}},
	{{0x0,0x5,0x0,0x0},{0x1,0x0,0x0,0x0},{0x0,0x0,0x0,0x1},{0x0,0x0,0x1,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0xA,0x0,0x0}},
	{{0x6,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x9,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x4},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0xC},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff);
	TK_NUM = 2;
	if (!sanityCheck(alpha,trail_rounds,key_diff,4))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}

void get_4TK2_1_17_U_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	trail_rounds = 12;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x8}},
	{{0x0,0x0,0x4,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x4},{0x0,0x0,0x0,0x0}},
	{{0x0,0x2,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x2,0x0,0x0},{0x0,0x2,0x0,0x0}},
	{{0x1,0x1,0x0,0x1},{0x0,0x1,0x0,0x0},{0x0,0x0,0xD,0x1},{0x0,0x1,0x0,0x1}},
	{{0xB,0x0,0x9,0xB},{0x9,0x8,0x0,0xB},{0x9,0x8,0xB,0x0},{0x0,0x0,0x0,0xB}},
	{{0x0,0x0,0x0,0x0},{0x1,0x0,0x4,0xD},{0x0,0x4,0x0,0xD},{0x0,0x0,0x1,0x0}},
	{{0x0,0x0,0x0,0xB},{0x0,0x0,0x0,0x0},{0x9,0x0,0x0,0x0},{0x0,0x9,0x0,0xB}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t alpha_after_temp[20][4][4] = {
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x4}},
	{{0x0,0x0,0x2,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x2},{0x0,0x0,0x0,0x0}},
	{{0x0,0x1,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x1,0x0,0x0},{0x0,0x1,0x0,0x0}},
	{{0x9,0x8,0x0,0xB},{0x0,0xB,0x0,0x0},{0x0,0x0,0x9,0x8},{0x0,0xB,0x0,0x9}},
	{{0x1,0x0,0x4,0x3},{0x4,0x5,0x0,0x1},{0x5,0xD,0x1,0x0},{0x0,0x0,0x0,0x1}},
	{{0x0,0x0,0x0,0x0},{0x9,0x0,0xB,0x9},{0x0,0xB,0x0,0x9},{0x0,0x0,0x9,0x0}},
	{{0x0,0x0,0x0,0x3},{0x0,0x0,0x0,0x0},{0x4,0x0,0x0,0x0},{0x0,0x4,0x0,0x3}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0xC,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0xF,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff);
	TK_NUM = 2;
	if (!sanityCheck(alpha,trail_rounds,key_diff,4))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}

void get_4TK2_1_18_L_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	trail_rounds = 12;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x5,0x1,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x1,0x0,0x0},{0x0,0x5,0x0,0x4}},
	{{0x0,0x8,0x2,0x9},{0x2,0x8,0x0,0x0},{0x0,0x0,0x0,0x9},{0x2,0x8,0x0,0x9}},
	{{0x5,0x0,0x0,0x0},{0x0,0x5,0x5,0x5},{0xC,0x0,0x4,0x0},{0x0,0x0,0x5,0x5}},
	{{0x0,0xA,0x0,0x0},{0x2,0x0,0x0,0x0},{0x0,0x0,0x0,0xA},{0x0,0x0,0x2,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x5,0x0,0x0}},
	{{0xA,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0xD,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x9},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x9},{0x0,0x0,0x0,0x9}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t alpha_after_temp[20][4][4] = {
	{{0x2,0x8,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x9,0x0,0x0},{0x0,0x2,0x0,0x2}},
	{{0x0,0x5,0x5,0x5},{0x5,0x4,0x0,0x0},{0x0,0x0,0x0,0x5},{0x5,0x5,0x0,0x5}},
	{{0x2,0x0,0x0,0x0},{0x0,0x2,0xA,0x2},{0x2,0x0,0x2,0x0},{0x0,0x0,0xA,0x2}},
	{{0x0,0x5,0x0,0x0},{0x5,0x0,0x0,0x0},{0x0,0x0,0x0,0x5},{0x0,0x0,0x5,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0xA,0x0,0x0}},
	{{0x6,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x9,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x4},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x4},{0x0,0x0,0x0,0x5}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x4},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0xC},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff);
	TK_NUM = 2;
	if (!sanityCheck(alpha,trail_rounds,key_diff,4))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}


void get_4TK2_1_19_U_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	trail_rounds = 13;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x2,0x0,0x0,0x0},{0x0,0x0,0x1,0x0},{0x0,0x1,0x0,0x0},{0x1,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x8}},
	{{0x0,0x0,0x4,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x4},{0x0,0x0,0x0,0x0}},
	{{0x0,0x2,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x2,0x0,0x0},{0x0,0x2,0x0,0x0}},
	{{0x1,0x1,0x0,0x1},{0x0,0x1,0x0,0x0},{0x0,0x0,0xD,0x1},{0x0,0x1,0x0,0x1}},
	{{0xA,0x0,0xB,0xA},{0x9,0x9,0x0,0xA},{0x9,0x9,0xA,0x0},{0x0,0x0,0x0,0xA}},
	{{0x0,0x0,0x0,0x0},{0x5,0x0,0x1,0x5},{0x0,0x5,0x0,0x5},{0x0,0x0,0x5,0x0}},
	{{0x0,0x0,0x0,0xA},{0x0,0x0,0x0,0x0},{0x2,0x0,0x0,0x0},{0x0,0x2,0x0,0xA}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t alpha_after_temp[20][4][4] = {
	{{0x3,0x0,0x0,0x0},{0x0,0x0,0x8,0x0},{0x0,0x8,0x0,0x0},{0x8,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x4}},
	{{0x0,0x0,0x2,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x2},{0x0,0x0,0x0,0x0}},
	{{0x0,0x1,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x1,0x0,0x0},{0x0,0x1,0x0,0x0}},
	{{0x9,0x9,0x0,0xA},{0x0,0xA,0x0,0x0},{0x0,0x0,0x9,0x9},{0x0,0xA,0x0,0xB}},
	{{0x5,0x0,0x1,0xB},{0x5,0x4,0x0,0x5},{0x4,0x5,0x5,0x0},{0x0,0x0,0x0,0x5}},
	{{0x0,0x0,0x0,0x0},{0x2,0x0,0xA,0x2},{0x0,0xA,0x0,0x2},{0x0,0x0,0x2,0x0}},
	{{0x0,0x0,0x0,0x5},{0x0,0x0,0x0,0x0},{0x1,0x0,0x0,0x0},{0x0,0x6,0x0,0x5}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0xC,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0xF,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff);
	TK_NUM = 2;
	if (!sanityCheck(alpha,trail_rounds,key_diff,4))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}


void get_4TK2_2_17_L_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	trail_rounds = 11;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x0,0xD,0xD,0x4},{0x0,0x0,0x0,0x0},{0xD,0x0,0x0,0x5},{0x0,0x1,0x0,0x1}},
	{{0x8,0x0,0x0,0x2},{0x0,0x2,0x2,0x2},{0x0,0x2,0x9,0x0},{0x0,0x0,0xB,0x2}},
	{{0x0,0x0,0x1,0x0},{0x4,0xC,0x0,0x5},{0x1,0x0,0x5,0x0},{0x0,0xC,0x0,0x0}},
	{{0xA,0x0,0x0,0x0},{0x0,0x0,0x8,0x0},{0x0,0x2,0x0,0x0},{0x2,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x5}},
	{{0x0,0x0,0xA,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0xD},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t alpha_after_temp[20][4][4] = {
	{{0x0,0x2,0x2,0x2},{0x0,0x0,0x0,0x0},{0x9,0x0,0x0,0x2},{0x0,0x8,0x0,0xB}},
	{{0x4,0x0,0x0,0x5},{0x0,0x5,0x5,0x5},{0x0,0x5,0x4,0x0},{0x0,0x0,0xC,0x1}},
	{{0x0,0x0,0x8,0x0},{0x2,0x8,0x0,0x2},{0x8,0x0,0x2,0x0},{0x0,0x8,0x0,0x0}},
	{{0x5,0x0,0x0,0x0},{0x0,0x0,0x5,0x0},{0x0,0x5,0x0,0x0},{0x5,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0xA}},
	{{0x0,0x0,0x6,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x2},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x4}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0xC}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff);
	TK_NUM = 2;
	if (!sanityCheck(alpha,trail_rounds,key_diff,4))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}


void get_4TK2_2_17_U_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	trail_rounds = 12;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x8,0x0,0x0}},
	{{0x4,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x4,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x2},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x2},{0x0,0x0,0x0,0x2}},
	{{0x0,0x1,0x5,0x1},{0x0,0x0,0x0,0x1},{0x0,0x1,0x0,0xD},{0x0,0x1,0x0,0x1}},
	{{0xB,0x0,0xB,0x0},{0x0,0x9,0x2,0xB},{0xB,0x9,0x0,0xB},{0x0,0x0,0x2,0x0}},
	{{0x1,0x0,0x0,0x5},{0x1,0x0,0x1,0x0},{0x1,0x1,0x0,0x0},{0x1,0x1,0x0,0x5}},
	{{0x0,0x0,0x0,0x0},{0x8,0x0,0x0,0x2},{0x0,0xA,0xA,0x0},{0x8,0x0,0xA,0x9}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t alpha_after_temp[20][4][4] = {
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x4,0x0,0x0}},
	{{0x2,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x2,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x1},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x1},{0x0,0x0,0x0,0x5}},
	{{0x0,0x9,0x2,0xB},{0x0,0x0,0x0,0xB},{0x0,0xB,0x0,0x9},{0x0,0xB,0x0,0x9}},
	{{0x1,0x0,0x1,0x0},{0x0,0xF,0x5,0x1},{0x1,0x5,0x0,0x1},{0x0,0x0,0x1,0x0}},
	{{0x8,0x0,0x0,0x2},{0xA,0x0,0xB,0x0},{0xA,0xB,0x0,0x0},{0x9,0x8,0x0,0xA}},
	{{0x0,0x0,0x0,0x0},{0x4,0x0,0x0,0x6},{0x0,0x6,0x6,0x0},{0x5,0x0,0x5,0x4}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0xC,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0xF,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff);
	TK_NUM = 2;
	if (!sanityCheck(alpha,trail_rounds,key_diff,4))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}
void get_4TK2_2_18_L_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	trail_rounds = 12;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x0,0xD,0xD,0x4},{0x0,0x0,0x0,0x0},{0xD,0x0,0x0,0x5},{0x0,0x1,0x0,0x1}},
	{{0x8,0x0,0x0,0x2},{0x0,0x2,0x2,0x2},{0x0,0x2,0x9,0x0},{0x0,0x0,0xB,0x2}},
	{{0x0,0x0,0x1,0x0},{0x4,0xC,0x0,0x5},{0x1,0x0,0x5,0x0},{0x0,0xC,0x0,0x0}},
	{{0xA,0x0,0x0,0x0},{0x0,0x0,0x8,0x0},{0x0,0x2,0x0,0x0},{0x2,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x5}},
	{{0x0,0x0,0xA,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0xD},{0x0,0x0,0x0,0x0}},
	{{0x0,0x2,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x2,0x0,0x0},{0x0,0x2,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t alpha_after_temp[20][4][4] = {
	{{0x0,0x2,0x2,0x2},{0x0,0x0,0x0,0x0},{0x9,0x0,0x0,0x2},{0x0,0x8,0x0,0xB}},
	{{0x4,0x0,0x0,0x5},{0x0,0x5,0x5,0x5},{0x0,0x5,0x4,0x0},{0x0,0x0,0xC,0x1}},
	{{0x0,0x0,0x8,0x0},{0x2,0x8,0x0,0x2},{0x8,0x0,0x2,0x0},{0x0,0x8,0x0,0x0}},
	{{0x5,0x0,0x0,0x0},{0x0,0x0,0x5,0x0},{0x0,0x5,0x0,0x0},{0x5,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0xA}},
	{{0x0,0x0,0x6,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x2},{0x0,0x0,0x0,0x0}},
	{{0x0,0x1,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x1,0x0,0x0},{0x0,0x3,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x4}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0xC}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff);
	TK_NUM = 2;
	if (!sanityCheck(alpha,trail_rounds,key_diff,4))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}

void get_4TK2_2_19_U_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	trail_rounds = 13;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x0,0x2,0x0,0x0},{0x1,0x0,0x0,0x0},{0x0,0x0,0x0,0x1},{0x0,0x0,0x1,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x8,0x0,0x0}},
	{{0x4,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x4,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x2},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x2},{0x0,0x0,0x0,0x2}},
	{{0x0,0x1,0x5,0x1},{0x0,0x0,0x0,0x1},{0x0,0x1,0x0,0xD},{0x0,0x1,0x0,0x1}},
	{{0xB,0x0,0xB,0x0},{0x0,0x9,0x2,0xB},{0xB,0x9,0x0,0xB},{0x0,0x0,0x2,0x0}},
	{{0x1,0x0,0x0,0x5},{0x1,0x0,0x1,0x0},{0x1,0x1,0x0,0x0},{0x1,0x1,0x0,0x5}},
	{{0x0,0x0,0x0,0x8},{0x8,0x0,0x0,0xA},{0x0,0x8,0xA,0x0},{0x8,0x0,0xA,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t alpha_after_temp[20][4][4] = {
	{{0x0,0x3,0x0,0x0},{0x8,0x0,0x0,0x0},{0x0,0x0,0x0,0x8},{0x0,0x0,0x8,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x4,0x0,0x0}},
	{{0x2,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x2,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x1},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x1},{0x0,0x0,0x0,0x5}},
	{{0x0,0x9,0x2,0xB},{0x0,0x0,0x0,0xB},{0x0,0xB,0x0,0x9},{0x0,0xB,0x0,0x9}},
	{{0x1,0x0,0x1,0x0},{0x0,0xF,0x5,0x1},{0x1,0x5,0x0,0x1},{0x0,0x0,0x1,0x0}},
	{{0x8,0x0,0x0,0xA},{0x8,0x0,0xA,0x0},{0xA,0xA,0x0,0x0},{0x8,0x8,0x0,0xA}},
	{{0x0,0x0,0x0,0x4},{0x4,0x0,0x0,0x5},{0x0,0x4,0x5,0x0},{0x4,0x0,0x6,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0x0,0xC,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0xF,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff);
	TK_NUM = 2;
	if (!sanityCheck(alpha,trail_rounds,key_diff,4))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}

void get_4TK3_1_22_L_BMD1_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	trail_rounds = 14;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x9,0x8,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x8,0x0,0x0},{0x0,0x8,0x0,0x9}},
	{{0x0,0x4,0x4,0x4},{0x4,0x4,0x0,0x0},{0x0,0x0,0x0,0x4},{0x4,0x4,0x0,0x4}},
	{{0x2,0x0,0x0,0x0},{0x0,0x2,0x2,0x2},{0xB,0x0,0x2,0x0},{0x0,0x0,0x2,0x2}},
	{{0x0,0x6,0x0,0x0},{0x3,0x0,0x0,0x0},{0x0,0x0,0x0,0x3},{0x0,0x0,0x3,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0xC,0x0,0x0}},
	{{0x2,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x5},{0x0,0x0,0x0,0x0}},
	{{0x0,0xA,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0xA,0x0,0x0},{0x0,0xA,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t alpha_after_temp[20][4][4] = {
	{{0x4,0x4,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x4,0x0,0x0},{0x0,0x4,0x0,0x4}},
	{{0x0,0x2,0x2,0x2},{0x2,0x2,0x0,0x0},{0x0,0x0,0x0,0x2},{0x2,0x2,0x0,0x2}},
	{{0x3,0x0,0x0,0x0},{0x0,0x3,0x3,0x3},{0x3,0x0,0x3,0x0},{0x0,0x0,0x6,0x3}},
	{{0x0,0x4,0x0,0x0},{0xC,0x0,0x0,0x0},{0x0,0x0,0x0,0xC},{0x0,0x0,0xC,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x2,0x0,0x0}},
	{{0x5,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0xA},{0x0,0x0,0x0,0x0}},
	{{0x0,0x6,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x5,0x0,0x0},{0x0,0x5,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x2},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x5},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x4},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff);
	TK_NUM = 3;
	if (!sanityCheck(alpha,trail_rounds,key_diff,4))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}

void get_4TK3_1_22_U_BMD1_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	trail_rounds = 14;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x1,0x0,0x0}},
	{{0x8,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x4},{0x0,0x0,0x0,0x0}},
	{{0x0,0x2,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x2,0x0,0x0},{0x0,0x2,0x0,0x0}},
	{{0x1,0x1,0x0,0x1},{0x0,0x1,0x0,0x0},{0x0,0x0,0xF,0x1},{0x0,0x1,0x0,0x1}},
	{{0xA,0x0,0xB,0xA},{0x8,0x8,0x0,0xA},{0x8,0x8,0xA,0x0},{0x0,0x0,0x0,0xA}},
	{{0x0,0x0,0x0,0x4},{0x5,0x0,0x1,0x0},{0x0,0x4,0x0,0x4},{0x0,0x0,0x5,0x4}},
	{{0x0,0x0,0x2,0x0},{0x0,0x0,0x0,0xB},{0x0,0x0,0x0,0x0},{0x0,0x2,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t alpha_after_temp[20][4][4] = {
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x8,0x0,0x0}},
	{{0x4,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x2},{0x0,0x0,0x0,0x0}},
	{{0x0,0x1,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x1,0x0,0x0},{0x0,0x1,0x0,0x0}},
	{{0x8,0x8,0x0,0xA},{0x0,0xA,0x0,0x0},{0x0,0x0,0x8,0x8},{0x0,0xA,0x0,0xB}},
	{{0x5,0x0,0x1,0x9},{0x4,0x4,0x0,0x5},{0x4,0x4,0x5,0x0},{0x0,0x0,0x0,0x5}},
	{{0x0,0x0,0x0,0xB},{0x2,0x0,0xB,0x0},{0x0,0xB,0x0,0x2},{0x0,0x0,0x2,0x2}},
	{{0x0,0x0,0x6,0x0},{0x0,0x0,0x0,0x1},{0x0,0x0,0x0,0x0},{0x0,0x1,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x7,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x3,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0xB,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff);
	TK_NUM = 3;
	if (!sanityCheck(alpha,trail_rounds,key_diff,4))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}

void get_4TK3_1_22_L_BMD2_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	trail_rounds = 14;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x2,0x2,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x9,0x0,0x0},{0x0,0x2,0x0,0x8}},
	{{0x0,0x5,0x4,0x4},{0x5,0x5,0x0,0x0},{0x0,0x0,0x0,0x4},{0x5,0x5,0x0,0x4}},
	{{0x2,0x0,0x0,0x0},{0x0,0x2,0x2,0x2},{0x7,0x0,0x2,0x0},{0x0,0x0,0x2,0x2}},
	{{0x0,0x1,0x0,0x0},{0x1,0x0,0x0,0x0},{0x0,0x0,0x0,0x1},{0x0,0x0,0x1,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0xB,0x0,0x0}},
	{{0x1,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0xB},{0x0,0x0,0x0,0x0}},
	{{0x0,0x1,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x1,0x0,0x0},{0x0,0x1,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t alpha_after_temp[20][4][4] = {
	{{0x5,0x5,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x4,0x0,0x0},{0x0,0x5,0x0,0x4}},
	{{0x0,0x2,0x2,0x2},{0x2,0x2,0x0,0x0},{0x0,0x0,0x0,0x2},{0x2,0x2,0x0,0x2}},
	{{0x1,0x0,0x0,0x0},{0x0,0x1,0x1,0x1},{0x1,0x0,0x1,0x0},{0x0,0x0,0x1,0x1}},
	{{0x0,0x9,0x0,0x0},{0xB,0x0,0x0,0x0},{0x0,0x0,0x0,0xB},{0x0,0x0,0xB,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x1,0x0,0x0}},
	{{0xB,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x1},{0x0,0x0,0x0,0x0}},
	{{0x0,0x8,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x8,0x0,0x0},{0x0,0x8,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x4},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0xB},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x9},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff);
	TK_NUM = 3;
	if (!sanityCheck(alpha,trail_rounds,key_diff,4))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}

void get_4TK3_1_22_U_BMD2_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	trail_rounds = 14;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x8,0x0,0x0}},
	{{0x4,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x2},{0x0,0x0,0x0,0x0}},
	{{0x0,0x5,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x5,0x0,0x0},{0x0,0x5,0x0,0x0}},
	{{0x2,0xA,0x0,0x2},{0x0,0xA,0x0,0x0},{0x0,0x0,0x7,0x2},{0x0,0xA,0x0,0x2}},
	{{0x5,0x0,0x1,0x5},{0x1,0x5,0x0,0x5},{0x1,0x5,0x5,0x0},{0x0,0x0,0x0,0x5}},
	{{0x0,0x0,0x0,0x0},{0x2,0x0,0x8,0x2},{0x0,0x8,0x0,0x2},{0x0,0x0,0x2,0x0}},
	{{0x0,0x0,0x0,0x4},{0x0,0x0,0x0,0x0},{0x5,0x0,0x0,0x0},{0x0,0x5,0x0,0x4}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t alpha_after_temp[20][4][4] = {
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x4,0x0,0x0}},
	{{0x2,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x5},{0x0,0x0,0x0,0x0}},
	{{0x0,0xA,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x2,0x0,0x0},{0x0,0x2,0x0,0x0}},
	{{0x1,0x5,0x0,0x5},{0x0,0x5,0x0,0x0},{0x0,0x0,0x1,0x5},{0x0,0x5,0x0,0x1}},
	{{0x2,0x0,0x8,0x6},{0x8,0xA,0x0,0x2},{0xA,0x2,0x2,0x0},{0x0,0x0,0x0,0x2}},
	{{0x0,0x0,0x0,0x0},{0x5,0x0,0x4,0x5},{0x0,0x4,0x0,0x5},{0x0,0x0,0x5,0x0}},
	{{0x0,0x0,0x0,0x2},{0x0,0x0,0x0,0x0},{0x2,0x0,0x0,0x0},{0x0,0x2,0x0,0x2}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0xB,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x9,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x5,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff);
	TK_NUM = 3;
	if (!sanityCheck(alpha,trail_rounds,key_diff,4))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}


void get_4TK3_1_22_U_BMD3_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	trail_rounds = 14;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x2,0x0,0x0}},
	{{0x5,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0xA},{0x0,0x0,0x0,0x0}},
	{{0x0,0x5,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x5,0x0,0x0},{0x0,0x5,0x0,0x0}},
	{{0x2,0x2,0x0,0x2},{0x0,0x2,0x0,0x0},{0x0,0x0,0x2,0x2},{0x0,0x2,0x0,0x2}},
	{{0x5,0x0,0x1,0x5},{0x1,0x5,0x0,0x5},{0x1,0x5,0x5,0x0},{0x0,0x0,0x0,0x5}},
	{{0x0,0x0,0x0,0x0},{0x2,0x0,0x8,0x2},{0x0,0x8,0x0,0x2},{0x0,0x0,0x2,0x0}},
	{{0x0,0x0,0x0,0x4},{0x0,0x0,0x0,0x0},{0x1,0x0,0x0,0x0},{0x0,0x1,0x0,0x4}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t alpha_after_temp[20][4][4] = {
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x5,0x0,0x0}},
	{{0xA,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x5},{0x0,0x0,0x0,0x0}},
	{{0x0,0x2,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x2,0x0,0x0},{0x0,0x2,0x0,0x0}},
	{{0x1,0x5,0x0,0x5},{0x0,0x5,0x0,0x0},{0x0,0x0,0x1,0x5},{0x0,0x5,0x0,0x1}},
	{{0x2,0x0,0x8,0x7},{0x8,0xA,0x0,0x2},{0xA,0x2,0x2,0x0},{0x0,0x0,0x0,0x2}},
	{{0x0,0x0,0x0,0x0},{0x1,0x0,0x4,0x1},{0x0,0x4,0x0,0x1},{0x0,0x0,0x1,0x0}},
	{{0x0,0x0,0x0,0x2},{0x0,0x0,0x0,0x0},{0x9,0x0,0x0,0x0},{0x0,0x9,0x0,0x2}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x1,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0xB,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x8,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff);
	TK_NUM = 3;
	if (!sanityCheck(alpha,trail_rounds,key_diff,4))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}

void get_4TK3_1_23_U_BMD1_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	trail_rounds = 15;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x0,0x9,0x0,0x0},{0x2,0x0,0x0,0x0},{0x0,0x0,0x0,0x2},{0x0,0x0,0x2,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x1,0x0,0x0}},
	{{0x8,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x4},{0x0,0x0,0x0,0x0}},
	{{0x0,0xD,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0xD,0x0,0x0},{0x0,0xD,0x0,0x0}},
	{{0x9,0x9,0x0,0x2},{0x0,0x9,0x0,0x0},{0x0,0x0,0xF,0x2},{0x0,0x9,0x0,0x2}},
	{{0x5,0x0,0x1,0x1},{0x4,0x5,0x0,0x1},{0x4,0x5,0x5,0x0},{0x0,0x0,0x0,0x1}},
	{{0x0,0x0,0x0,0x2},{0xA,0x0,0xA,0x0},{0x0,0x2,0x0,0x2},{0x0,0x0,0x8,0x2}},
	{{0x0,0x0,0x1,0x0},{0x0,0x0,0x0,0x5},{0x0,0x0,0x0,0x0},{0x0,0x5,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t alpha_after_temp[20][4][4] = {
	{{0x0,0xF,0x0,0x0},{0x1,0x0,0x0,0x0},{0x0,0x0,0x0,0x1},{0x0,0x0,0x1,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x8,0x0,0x0}},
	{{0x4,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0xD},{0x0,0x0,0x0,0x0}},
	{{0x0,0x9,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x2,0x0,0x0},{0x0,0x9,0x0,0x0}},
	{{0x4,0x5,0x0,0x1},{0x0,0x5,0x0,0x0},{0x0,0x0,0x4,0x5},{0x0,0x5,0x0,0x1}},
	{{0xA,0x0,0xA,0x9},{0x2,0x2,0x0,0xA},{0x2,0x2,0xA,0x0},{0x0,0x0,0x0,0x8}},
	{{0x0,0x0,0x0,0x5},{0x5,0x0,0x5,0x0},{0x0,0x5,0x0,0x5},{0x0,0x0,0x5,0x1}},
	{{0x0,0x0,0x8,0x0},{0x0,0x0,0x0,0x2},{0x0,0x0,0x0,0x0},{0x0,0x2,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0x0,0x7,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x3,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0xB,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff);
	TK_NUM = 3;
	if (!sanityCheck(alpha,trail_rounds,key_diff,4))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}

void get_4TK3_1_23_U_BMD2_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	trail_rounds = 15;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x0,0x4,0x0,0x0},{0x1,0x0,0x0,0x0},{0x0,0x0,0x0,0x1},{0x0,0x0,0x1,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x8,0x0,0x0}},
	{{0x4,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x2},{0x0,0x0,0x0,0x0}},
	{{0x0,0x5,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x5,0x0,0x0},{0x0,0x5,0x0,0x0}},
	{{0x2,0xA,0x0,0x2},{0x0,0xA,0x0,0x0},{0x0,0x0,0x7,0x2},{0x0,0xA,0x0,0x2}},
	{{0x5,0x0,0x1,0x5},{0x1,0x5,0x0,0x5},{0x1,0x5,0x5,0x0},{0x0,0x0,0x0,0x5}},
	{{0x0,0x0,0x0,0x0},{0x2,0x0,0x8,0x2},{0x0,0xA,0x0,0x2},{0x0,0x0,0x2,0x0}},
	{{0x0,0x0,0x0,0x5},{0x0,0x0,0x0,0x0},{0x1,0x0,0x0,0x0},{0x0,0x1,0x0,0x5}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t alpha_after_temp[20][4][4] = {
	{{0x0,0x7,0x0,0x0},{0x8,0x0,0x0,0x0},{0x0,0x0,0x0,0x8},{0x0,0x0,0x8,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x4,0x0,0x0}},
	{{0x2,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x5},{0x0,0x0,0x0,0x0}},
	{{0x0,0xA,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x2,0x0,0x0},{0x0,0x2,0x0,0x0}},
	{{0x1,0x5,0x0,0x5},{0x0,0x5,0x0,0x0},{0x0,0x0,0x1,0x5},{0x0,0x5,0x0,0x1}},
	{{0x2,0x0,0x8,0x6},{0xA,0xA,0x0,0x2},{0xA,0x2,0x2,0x0},{0x0,0x0,0x0,0x2}},
	{{0x0,0x0,0x0,0x0},{0x1,0x0,0x5,0x1},{0x0,0x5,0x0,0x1},{0x0,0x0,0x1,0x0}},
	{{0x0,0x0,0x0,0x2},{0x0,0x0,0x0,0x0},{0x8,0x0,0x0,0x0},{0x0,0x8,0x0,0xA}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0x0,0xB,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x9,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x5,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff);
	TK_NUM = 3;
	if (!sanityCheck(alpha,trail_rounds,key_diff,4))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}


void get_4TK2_18_L_2021_656(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM, uint8_t u, uint8_t v)
{
	if (v != 2 and v != 10 and v != 12 and v != 13)
	{
		std::cout << "Value Error!" << std::endl;
		exit(0);
	}
	if (u != 6)
	{
		std::cout << "Value Error!" << std::endl;
		exit(0);
	}
	trail_rounds = 8;
	// only the first 8 rounds
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x2}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x5,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x5,0x0}},
	{{0x0,v,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,u^0xc},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x6,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0xd,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};



	uint8_t alpha_after_temp[20][4][4] = {
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x5}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,u,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,v,0x0}},
	{{0x0,0x6,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x6},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x7,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0xf,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};


	uint8_t key_diff_temp[4][4][4] = {
	{{0x0,0x0,0x4,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0xa,0x0,0x0,0x0}},
	{{0x0,0x0,0x1,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x3,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff);
	TK_NUM = 2;
	if (!sanityCheck(alpha,trail_rounds,key_diff,4))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}

}


void get_4TK3_22_L_2021_656(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM, uint8_t u, uint8_t v)
{
	if (u != 8 and u != 9)
	{
		std::cout << "Value Error!" << std::endl;
		exit(0);
	}
	if (v != 5)
	{
		std::cout << "Value Error!" << std::endl;
		exit(0);
	}
	trail_rounds = 10;
	// only the first 10 rounds
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x3,0x0,0x0,0x0},{0x0,0x0,0x0,0x2},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0xa,0x0},{0x0,0x0,0xa,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0xa,0x0}},
	{{0x0,v,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,u^0xd},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x2,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x8,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};


	uint8_t alpha_after_temp[20][4][4] = {
	{{0xd,0x0,0x0,0x0},{0x0,0x0,0x0,0x6},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x6,0x0},{0x0,0x0,u,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,v,0x0}},
	{{0x0,0x2,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x2},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x1,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x5,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};

	uint8_t key_diff_temp[4][4][4] = {
	{{0x8,0x0,0x0,0x0},{0x0,0x0,0x0,0xc},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x1}},
	{{0xb,0x0,0x0,0x0},{0x0,0x0,0x0,0x5},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x7}},
	{{0xe,0x0,0x0,0x0},{0x0,0x0,0x0,0xf},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0xc}},
	{{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff);
	TK_NUM = 3;
	if (!sanityCheck(alpha,trail_rounds,key_diff,4))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}


void get_8TK2_19_L_2021_656(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM, uint8_t u, uint8_t v, uint8_t w)
{
	if (u != 0x40 and u != 0x50 and u != 0xc0 and u != 0xc2 and u != 0xc3 and u != 0xd0 and u != 0xd2 and u != 0xd3)
	{
		std::cout << "Value Error!" << std::endl;
		exit(0);
	}
	if (v != 0x2a and v != 0x2e and v != 0x2f and v != 0x6a and v != 0xba and v != 0xbe and 
		v != 0xbf and v != 0xea and v != 0xef and v != 0xfa and v != 0xfe)
	{
		std::cout << "Value Error!" << std::endl;
		exit(0);
	}
	if (w != 0x2a and w != 0x2d and w != 0x2e and w != 0x2f and w != 0x6b and w != 0x7c and
		w != 0xb8 and w != 0xb9 and w != 0xba and w != 0xbd and w != 0xbe and w != 0xbf and
		w != 0xeb and w != 0xec and w != 0xef and w != 0xfb and w != 0xfc and w != 0xfe)
	{
		std::cout << "Value Error!" << std::endl;
		exit(0);
	}
	
	trail_rounds = 9;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x00,0x00,0x00,0x00},{0x13,0x00,0x10,0x00},{0x00,0x10,0x00,0x00},{0x10,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,u}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0xd4,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0xd4,0x00}},
	{{0x00, w,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,v^0x08},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x98,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x31,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}
	};

	uint8_t alpha_after_temp[20][4][4] = {
	{{0x00,0x00,0x00,0x00},{0xf4,0x00,u,0x00},{0x00,u,0x00,0x00},{u,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0xd4}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,v,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,w,0x00}},
	{{0x00,0x98,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x98},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0xf0,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0xe0,0x00},{0x00,0x00,0x00,0x00}},
	{{0xe0,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0xe0,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};

	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x00,0x00,0x00},{0xa0,0x00,0x00,0x00},{0xef,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x54,0x00,0x00,0x00},{0x9d,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};

	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff);
	TK_NUM = 2;
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}

void get_8TK3_22_L_2021_656(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM, uint8_t u, uint8_t v)
{
	if (u != 0x8 and u != 0xc and u != 0xd and u != 0xe and u != 0xf)
	{
		std::cout << "Value Error!" << std::endl;
		exit(0);
	}
	if (v != 0x28 and v != 0x29 and v != 0x2c and v != 0x2d and v != 0x2e and v != 0x2f and v != 0xb9)
	{
		std::cout << "Value Error!" << std::endl;
		exit(0);
	}
	// 10 rounds
	TK_NUM = 3;
	trail_rounds = 10;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x81,0x00,0x00,0x00},{0x00,0x00,0x00,0x01},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x07,0x00},{0x00,0x00,0x07,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x07,0x00}},
	{{0x00,   v,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,u ^ 0x22},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x8a,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x10,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};

	uint8_t alpha_after_temp[20][4][4] = {
	{{0x22,0x00,0x00,0x00},{0x00,0x00,0x00,0xbb},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0xbb,0x00},{0x00,0x00,   u,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,   v,0x00}},
	{{0x00,0x8a,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x8a},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x76,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x50,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};

	uint8_t key_diff_temp[4][4][4] = {
	{{0x14,0x00,0x00,0x00},{0x00,0x00,0x00,0x1b},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x56}},
	{{0x06,0x00,0x00,0x00},{0x00,0x00,0x00,0x84},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x66}},
	{{0x30,0x00,0x00,0x00},{0x00,0x00,0x00,0x24},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x37}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff);
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}


void get_8TK2_1_18_L_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 2;
	trail_rounds = 12;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x10,0x00,0x00,0x25},{0x10,0x00,0x00,0x04},{0x00,0x50,0x00,0x10},{0x15,0x10,0x00,0x50}},
	{{0x00,0x40,0x04,0x40},{0x40,0x00,0x00,0x25},{0x05,0x00,0x00,0x04},{0x40,0x40,0x00,0x21}},
	{{0x06,0x00,0x00,0x00},{0x00,0x06,0x06,0x06},{0x26,0x00,0x26,0x00},{0x00,0x00,0x20,0x06}},
	{{0x00,0x90,0x00,0x00},{0x21,0x00,0x00,0x00},{0x00,0x00,0x00,0x21},{0x00,0x00,0x21,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x20,0x00,0x00}},
	{{0x90,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x04,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x01},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x01},{0x00,0x00,0x00,0x01}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	uint8_t alpha_after_temp[20][4][4] = {\
	{{0x40,0x00,0x00,0x25},{0x40,0x00,0x00,0x05},{0x00,0x04,0x00,0x40},{0x61,0x40,0x00,0x04}},
	{{0x00,0x06,0x06,0x06},{0x06,0x00,0x00,0xa5},{0x26,0x00,0x00,0x06},{0x06,0x06,0x00,0x20}},
	{{0x21,0x00,0x00,0x00},{0x00,0x21,0x21,0x21},{0x21,0x00,0x21,0x00},{0x00,0x00,0x90,0x21}},
	{{0x00,0x03,0x00,0x00},{0x20,0x00,0x00,0x00},{0x00,0x00,0x00,0x20},{0x00,0x00,0x20,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x90,0x00,0x00}},
	{{0x02,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x01,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x20},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x20},{0x00,0x00,0x00,0x20}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0xfc},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x3f},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff,8);
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}
void get_8TK2_1_18_U_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 2;
	trail_rounds = 12;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x80}},
	{{0x00,0x00,0x02,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x10},{0x00,0x00,0x00,0x00}},
	{{0x00,0x40,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x40,0x00,0x00},{0x00,0x40,0x00,0x00}},
	{{0x44,0x04,0x00,0x04},{0x00,0x04,0x00,0x00},{0x00,0x00,0x30,0x04},{0x00,0x04,0x00,0x04}},
	{{0xc2,0x94,0x01,0x28},{0x29,0xb9,0x00,0x28},{0xc3,0x2d,0xbb,0x00},{0xea,0x94,0x00,0x28}},
	{{0x1b,0x03,0xa2,0x42},{0x5c,0x03,0xb8,0x49},{0x74,0x30,0xa3,0x31},{0x18,0x03,0x92,0x78}},
	{{0x2c,0xd0,0xfe,0xb8},{0x78,0xbc,0x8a,0x08},{0x00,0x71,0x0c,0x40},{0x0c,0xdc,0xa2,0xc8}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	uint8_t alpha_after_temp[20][4][4] = {\
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x02}},
	{{0x00,0x00,0x08,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x40},{0x00,0x00,0x00,0x00}},
	{{0x00,0x04,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x04,0x00,0x00},{0x00,0x44,0x00,0x00}},
	{{0x29,0xb9,0x00,0x28},{0x00,0xbb,0x00,0x00},{0x00,0x00,0xc3,0x2d},{0x00,0x28,0x00,0x01}},
	{{0x5c,0x03,0xb8,0x38},{0x30,0x89,0x00,0x30},{0x2a,0x31,0x44,0x00},{0x3a,0x03,0x00,0x30}},
	{{0x78,0xbc,0x8a,0x08},{0x11,0x24,0x80,0x74},{0x28,0xc0,0x74,0x60},{0x70,0x20,0x0c,0x5c}},
	{{0x31,0x46,0x45,0x80},{0x84,0x81,0xc0,0x10},{0x00,0x24,0x11,0x04},{0xa1,0xa8,0x8a,0x44}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0xf0,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0xfc,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff,8);
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}
void get_8TK2_1_19_L_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 2;
	trail_rounds = 12;
	uint8_t alpha_before_temp[20][4][4] = {\
	{{0x10,0x00,0x00,0x25},{0x10,0x00,0x00,0x04},{0x00,0x50,0x00,0x10},{0x15,0x10,0x00,0x50}},
	{{0x00,0x40,0x04,0x40},{0x40,0x00,0x00,0x25},{0x05,0x00,0x00,0x04},{0x40,0x40,0x00,0x21}},
	{{0x06,0x00,0x00,0x00},{0x00,0x06,0x06,0x06},{0x26,0x00,0x26,0x00},{0x00,0x00,0x20,0x06}},
	{{0x00,0x90,0x00,0x00},{0x21,0x00,0x00,0x00},{0x00,0x00,0x00,0x21},{0x00,0x00,0x21,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x20,0x00,0x00}},
	{{0x90,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x04,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x01},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x01},{0x00,0x00,0x00,0x01}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	uint8_t alpha_after_temp[20][4][4] = {\
	{{0x40,0x00,0x00,0x25},{0x40,0x00,0x00,0x05},{0x00,0x04,0x00,0x40},{0x61,0x40,0x00,0x04}},
	{{0x00,0x06,0x06,0x06},{0x06,0x00,0x00,0xa5},{0x26,0x00,0x00,0x06},{0x06,0x06,0x00,0x20}},
	{{0x21,0x00,0x00,0x00},{0x00,0x21,0x21,0x21},{0x21,0x00,0x21,0x00},{0x00,0x00,0x90,0x21}},
	{{0x00,0x03,0x00,0x00},{0x20,0x00,0x00,0x00},{0x00,0x00,0x00,0x20},{0x00,0x00,0x20,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x90,0x00,0x00}},
	{{0x02,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x01,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x20},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x20},{0x00,0x00,0x00,0x20}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0xfc},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x3f},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff,8);
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}


void get_8TK2_1_19_U_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 2;
	trail_rounds = 13;
	uint8_t alpha_before_temp[20][4][4] = {\
	{{0x02,0x00,0x00,0x00},{0x00,0x00,0x20,0x00},{0x00,0x20,0x00,0x00},{0x20,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x80}},
	{{0x00,0x00,0x02,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x10},{0x00,0x00,0x00,0x00}},
	{{0x00,0xd3,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0xd3,0x00,0x00},{0x00,0xd3,0x00,0x00}},
	{{0x7a,0x6e,0x00,0xed},{0x00,0x6e,0x00,0x00},{0x00,0x00,0x30,0xed},{0x00,0x6e,0x00,0xed}},
	{{0x08,0x7a,0x9c,0x87},{0xf3,0x85,0x00,0x87},{0xc3,0xff,0xf3,0x00},{0x30,0x7a,0x00,0x87}},
	{{0x7d,0xb9,0x00,0xa6},{0x10,0xb9,0xcf,0x7b},{0xa8,0x24,0x20,0x8d},{0xf3,0xb9,0xe9,0xf6}},
	{{0x00,0x00,0x00,0x42},{0xea,0x7b,0x00,0x26},{0x00,0x05,0x00,0x2f},{0x6a,0x3e,0x4a,0xa0}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	uint8_t alpha_after_temp[20][4][4] = {\
	{{0x00,0x00,0x00,0x80},{0x00,0x00,0x80,0x00},{0x00,0x80,0x00,0x00},{0x00,0x00,0x00,0x0c}},
	{{0x02,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x08,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0xd3},{0x00,0x00,0x00,0x00}},
	{{0x00,0x6e,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0xed,0x00,0x00},{0x00,0x7a,0x00,0x00}},
	{{0xf3,0x85,0x00,0x87},{0x00,0xf3,0x00,0x00},{0x00,0x00,0xc3,0xff},{0x00,0x38,0x00,0x9c}},
	{{0x10,0xb9,0xcf,0x0a},{0x24,0x06,0x00,0x4b},{0x26,0x8d,0xe3,0x00},{0x50,0x8e,0x00,0xe9}},
	{{0xea,0x7b,0x00,0x26},{0x40,0x4a,0xa9,0x80},{0x4a,0x86,0x80,0x45},{0xe2,0x6a,0x3e,0x4a}},
	{{0x00,0x00,0x00,0x09},{0xe2,0x34,0x00,0x21},{0x00,0x01,0x00,0xb8},{0x38,0xe8,0x30,0x90}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0xf0,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0xfc,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff,8);
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}
void get_8TK2_1_20_L_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 2;
	trail_rounds = 12;
	uint8_t alpha_before_temp[20][4][4] = {\
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x80}},
	{{0x00,0x00,0x02,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x10},{0x00,0x00,0x00,0x00}},
	{{0x00,0x40,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x40,0x00,0x00},{0x00,0x40,0x00,0x00}},
	{{0x04,0xc4,0x00,0x06},{0x00,0xc4,0x00,0x00},{0x00,0x00,0x30,0x06},{0x00,0xc4,0x00,0x06}},
	{{0x90,0x0b,0x26,0xb1},{0x01,0x05,0x00,0xb1},{0xd3,0x0e,0x05,0x00},{0xd2,0x0b,0x00,0xb1}},
	{{0xa1,0xa2,0x31,0x0e},{0x03,0xa2,0x25,0x13},{0x94,0x20,0x91,0x11},{0xb5,0xa2,0x91,0x02}},
	{{0x81,0xc0,0x63,0x00},{0xab,0x8a,0x68,0x11},{0xd0,0x40,0xcc,0x26},{0x1b,0xea,0x6b,0x91}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	uint8_t alpha_after_temp[20][4][4] = {\
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x02}},
	{{0x00,0x00,0x08,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x40},{0x00,0x00,0x00,0x00}},
	{{0x00,0xc4,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x06,0x00,0x00},{0x00,0x04,0x00,0x00}},
	{{0x01,0x05,0x00,0xb1},{0x00,0x05,0x00,0x00},{0x00,0x00,0xd3,0x0e},{0x00,0x42,0x00,0x26}},
	{{0x03,0xa2,0x25,0x62},{0x20,0x25,0x00,0x22},{0xb4,0x11,0xb6,0x00},{0x0c,0x14,0x00,0xa0}},
	{{0xab,0x8a,0x68,0x11},{0x20,0xcf,0xa6,0x60},{0x03,0x80,0xb0,0x60},{0x91,0x9a,0x2a,0x08}},
	{{0xe8,0x04,0xa0,0x00},{0x44,0x4a,0x4e,0x60},{0x46,0x04,0x12,0x25},{0xc4,0x44,0x40,0xb0}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0xf0,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0xfc,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff,8);
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}
void get_8TK2_1_20_U_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 2;
	trail_rounds = 14;
	uint8_t alpha_before_temp[20][4][4] = {\
	{{0x00,0x00,0x01,0x00},{0x01,0x01,0x00,0x01},{0x01,0x00,0x01,0x00},{0x00,0xd5,0x00,0x00}},
	{{0x02,0x00,0x00,0x00},{0x00,0x00,0x20,0x00},{0x00,0x20,0x00,0x00},{0x20,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x80}},
	{{0x00,0x00,0x02,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x10},{0x00,0x00,0x00,0x00}},
	{{0x00,0xd0,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0xd0,0x00,0x00},{0x00,0xd0,0x00,0x00}},
	{{0x54,0xd6,0x00,0x47},{0x00,0xd6,0x00,0x00},{0x00,0x00,0x30,0x47},{0x00,0xd6,0x00,0x47}},
	{{0xe1,0x03,0x09,0x09},{0x29,0x0a,0x00,0x09},{0xc2,0x09,0x0a,0x00},{0xeb,0x03,0x00,0x09}},
	{{0x23,0xb0,0x2d,0x00},{0xa7,0xb0,0x10,0x61},{0x04,0x30,0x1d,0xa8},{0x03,0xb0,0x1d,0xc9}},
	{{0xad,0x02,0x84,0x60},{0x20,0x93,0x91,0x00},{0xbb,0x6b,0xc3,0x90},{0xff,0x53,0x90,0x40}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	uint8_t alpha_after_temp[20][4][4] = {\
	{{0x00,0x00,0x20,0x00},{0x20,0x20,0x00,0x20},{0x20,0x00,0x20,0x00},{0x00,0x22,0x00,0x00}},
	{{0x0c,0x00,0x00,0x00},{0x00,0x00,0x80,0x00},{0x00,0x80,0x00,0x00},{0x80,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x02}},
	{{0x00,0x00,0x08,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0xd0},{0x00,0x00,0x00,0x00}},
	{{0x00,0xd6,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x47,0x00,0x00},{0x00,0x54,0x00,0x00}},
	{{0x29,0x0a,0x00,0x09},{0x00,0x0a,0x00,0x00},{0x00,0x00,0xc2,0x09},{0x00,0x0a,0x00,0x09}},
	{{0xa7,0xb0,0x10,0x10},{0x30,0x10,0x00,0xa0},{0x0d,0xa8,0xa4,0x00},{0xc9,0x20,0x00,0x30}},
	{{0x20,0x93,0x91,0x00},{0xab,0xc2,0xd0,0x64},{0x01,0x40,0xdf,0xc0},{0x20,0x52,0x51,0x14}},
	{{0xf8,0x0c,0x03,0x94},{0x92,0xb0,0xb3,0x00},{0xb0,0x40,0xb8,0xc0},{0xb2,0x20,0x42,0x04}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0xf0,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0xfe,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff,8);
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}
void get_8TK2_1_21_L_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 2;
	trail_rounds = 13;
	uint8_t alpha_before_temp[20][4][4] = {\
	{{0x21,0x21,0x00,0x22},{0x00,0x00,0x00,0x00},{0x00,0x01,0x00,0x00},{0x04,0x21,0x00,0x04}},
	{{0x00,0x20,0x01,0x20},{0x20,0x20,0x00,0x99},{0x00,0x00,0x00,0xb8},{0x20,0x20,0x00,0x21}},
	{{0x90,0x00,0x00,0x00},{0x00,0x80,0x20,0x90},{0x90,0x00,0x90,0x00},{0x00,0x00,0x20,0x90}},
	{{0x00,0x80,0x00,0x00},{0x03,0x00,0x00,0x00},{0x00,0x00,0x00,0x93},{0x00,0x00,0x03,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0xb0,0x00,0x00}},
	{{0x80,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x04,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x01},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x01},{0x00,0x00,0x00,0x01}},
	{{0x00,0x20,0x20,0x20},{0x00,0x00,0x00,0x20},{0x00,0x20,0x00,0x0c},{0x00,0x20,0x00,0x20}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	uint8_t alpha_after_temp[20][4][4] = {\
	{{0x20,0x20,0x00,0x99},{0x00,0x00,0x00,0x00},{0x00,0xb8,0x00,0x00},{0x01,0x20,0x00,0x01}},
	{{0x00,0x80,0x20,0x90},{0x80,0x90,0x00,0x13},{0x00,0x00,0x00,0x80},{0x90,0x90,0x00,0x20}},
	{{0x03,0x00,0x00,0x00},{0x00,0x03,0x93,0x03},{0x03,0x00,0x03,0x00},{0x00,0x00,0x80,0x03}},
	{{0x00,0x03,0x00,0x00},{0xb0,0x00,0x00,0x00},{0x00,0x00,0x00,0xb0},{0x00,0x00,0xb0,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x80,0x00,0x00}},
	{{0x02,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x01,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x20},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x20},{0x00,0x00,0x00,0x20}},
	{{0x00,0x80,0x80,0x80},{0x00,0x00,0x00,0x80},{0x00,0x80,0x00,0x11},{0x00,0x80,0x00,0x80}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0xfc},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x3f},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff,8);
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}

void get_8TK2_1_21_U_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 2;
	trail_rounds = 14;
	uint8_t alpha_before_temp[20][4][4] = {\
	{{0x00,0x00,0x01,0x00},{0x01,0x01,0x00,0x01},{0x01,0x00,0x01,0x00},{0x00,0xd5,0x00,0x00}},
	{{0x02,0x00,0x00,0x00},{0x00,0x00,0x20,0x00},{0x00,0x20,0x00,0x00},{0x20,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x80}},
	{{0x00,0x00,0x02,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x10},{0x00,0x00,0x00,0x00}},
	{{0x00,0xd0,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0xd0,0x00,0x00},{0x00,0xd0,0x00,0x00}},
	{{0x54,0xd6,0x00,0x47},{0x00,0xd6,0x00,0x00},{0x00,0x00,0x30,0x47},{0x00,0xd6,0x00,0x47}},
	{{0xe1,0x03,0x09,0x09},{0x29,0x0a,0x00,0x09},{0xc2,0x09,0x0a,0x00},{0xeb,0x03,0x00,0x09}},
	{{0x23,0xb0,0x2d,0x00},{0xa7,0xb0,0x10,0x61},{0x04,0x30,0x1d,0xa8},{0x03,0xb0,0x1d,0xc9}},
	{{0xad,0x02,0x84,0x60},{0x20,0x93,0x91,0x00},{0xbb,0x6b,0xc3,0x90},{0xff,0x53,0x90,0x40}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	uint8_t alpha_after_temp[20][4][4] = {\
	{{0x00,0x00,0x20,0x00},{0x20,0x20,0x00,0x20},{0x20,0x00,0x20,0x00},{0x00,0x22,0x00,0x00}},
	{{0x0c,0x00,0x00,0x00},{0x00,0x00,0x80,0x00},{0x00,0x80,0x00,0x00},{0x80,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x02}},
	{{0x00,0x00,0x08,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0xd0},{0x00,0x00,0x00,0x00}},
	{{0x00,0xd6,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x47,0x00,0x00},{0x00,0x54,0x00,0x00}},
	{{0x29,0x0a,0x00,0x09},{0x00,0x0a,0x00,0x00},{0x00,0x00,0xc2,0x09},{0x00,0x0a,0x00,0x09}},
	{{0xa7,0xb0,0x10,0x10},{0x30,0x10,0x00,0xa0},{0x0d,0xa8,0xa4,0x00},{0xc9,0x20,0x00,0x30}},
	{{0x20,0x93,0x91,0x00},{0xab,0xc2,0xd0,0x64},{0x01,0x40,0xdf,0xc0},{0x20,0x52,0x51,0x14}},
	{{0xf8,0x0c,0x03,0x94},{0x92,0xb0,0xb3,0x00},{0xb0,0x40,0xb8,0xc0},{0xb2,0x20,0x42,0x04}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0xf0,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0xfe,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff,8);
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}



void SK_tosc_2017_i4_99_129(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 1;
	trail_rounds = 13;
	uint8_t alpha_before_temp[20][4][4] = {\
	{{0x00,0x00,0x80,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x80}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x02,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x02,0x00}},
	{{0x00,0x09,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x08},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x10,0x00,0x00},{0x00,0x10,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x40},{0x00,0x00,0x00,0x00},{0x00,0x00,0x50,0x40},{0x00,0x00,0x00,0x40}},
	{{0x04,0x04,0x04,0x04},{0x00,0x00,0x00,0x04},{0x04,0x04,0x00,0x00},{0x04,0x04,0x00,0x04}},
	{{0x04,0x05,0x05,0x05},{0x05,0x05,0x05,0x01},{0x01,0x00,0x05,0x05},{0x05,0x05,0x00,0x04}},
	{{0x01,0x00,0x00,0x00},{0x01,0x01,0x21,0x01},{0x21,0x00,0x21,0x01},{0x00,0x00,0x01,0x01}},
	{{0x00,0x00,0x00,0x00},{0x20,0x00,0x00,0x00},{0x00,0x00,0x00,0x20},{0x00,0x20,0x20,0x00}},
	{{0x80,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x90,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x02,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x02,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x08},{0x00,0x00,0x00,0x00},{0x00,0x08,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x10},{0x00,0x00,0x00,0x10},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	uint8_t alpha_after_temp[20][4][4] = {\
	{{0x00,0x00,0x02,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x02}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x08,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x08,0x00}},
	{{0x00,0x10,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x10},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x50,0x00,0x00},{0x00,0x40,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x04},{0x00,0x00,0x00,0x00},{0x00,0x00,0x04,0x04},{0x00,0x00,0x00,0x04}},
	{{0x05,0x05,0x05,0x01},{0x00,0x00,0x00,0x01},{0x05,0x05,0x00,0x00},{0x01,0x01,0x00,0x05}},
	{{0x01,0x01,0x21,0x01},{0x01,0x01,0x01,0x20},{0x20,0x00,0x01,0x01},{0x01,0x01,0x00,0x01}},
	{{0x20,0x00,0x00,0x00},{0x20,0x20,0x20,0x20},{0x20,0x00,0x20,0x20},{0x00,0x00,0x20,0x20}},
	{{0x00,0x00,0x00,0x00},{0x90,0x00,0x00,0x00},{0x00,0x00,0x00,0x90},{0x00,0x80,0x90,0x00}},
	{{0x02,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x02,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x08,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x08,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x10},{0x00,0x00,0x00,0x00},{0x00,0x10,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x40},{0x00,0x00,0x00,0x40},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff,8);
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}


void TK1_8_2020_1402(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 1;
	trail_rounds = 14;
	uint8_t alpha_before_temp[20][4][4] = {\
	{{0x02,0x00,0x00,0x02},{0x00,0x00,0x02,0x00},{0x00,0x02,0x00,0x00},{0x00,0x02,0x00,0x40}}, 
	{{0x00,0x00,0x04,0x00},{0x08,0x00,0x00,0x08},{0x00,0x00,0x00,0x00},{0x08,0x00,0x00,0x00}}, 
	{{0x00,0x00,0x00,0x10},{0x00,0x00,0x00,0x00},{0x10,0x10,0x00,0x00},{0x00,0x00,0x00,0x00}}, 
	{{0x00,0x00,0x40,0x00},{0x00,0x00,0x00,0x40},{0x00,0x00,0x40,0x40},{0x00,0x00,0x40,0x00}}, 
	{{0x04,0x00,0x04,0x00},{0x00,0x00,0x04,0x00},{0x00,0x05,0x00,0x00},{0x04,0x04,0x04,0x00}}, 
	{{0x00,0x05,0x05,0x00},{0x05,0x00,0x05,0x00},{0x00,0x00,0x00,0x04},{0x05,0x00,0x05,0x05}}, 
	{{0x00,0x05,0x00,0x05},{0x00,0x05,0x05,0x00},{0x00,0x04,0x00,0x00},{0x00,0x00,0x05,0x00}}, 
	{{0x00,0x00,0x00,0x00},{0x00,0x05,0x00,0x05},{0x00,0x00,0x05,0x00},{0x00,0x05,0x00,0x00}}, 
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x05,0x00,0x00,0x00}}, 
	{{0x00,0x00,0x00,0x05},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}, 
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}, 
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}, 
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x01,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}, 
	{{0x00,0x00,0x20,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x20,0x00},{0x00,0x00,0x20,0x00}}, 
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	uint8_t alpha_after_temp[20][4][4] = {\
	{{0x08,0x00,0x00,0x08},{0x00,0x00,0x08,0x00},{0x00,0x08,0x00,0x00},{0x00,0x08,0x00,0x04}},
	{{0x00,0x00,0x01,0x00},{0x10,0x00,0x00,0x10},{0x00,0x00,0x00,0x00},{0x10,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x40},{0x00,0x00,0x00,0x00},{0x40,0x40,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x04,0x00},{0x00,0x00,0x00,0x04},{0x00,0x00,0x04,0x04},{0x00,0x00,0x04,0x00}},
	{{0x05,0x00,0x05,0x00},{0x00,0x00,0x01,0x00},{0x00,0x05,0x00,0x00},{0x05,0x05,0x05,0x00}},
	{{0x00,0x05,0x05,0x00},{0x01,0x00,0x01,0x00},{0x00,0x00,0x00,0x05},{0x05,0x00,0x05,0x05}},
	{{0x00,0x05,0x00,0x05},{0x00,0x05,0x05,0x00},{0x00,0x05,0x00,0x00},{0x00,0x00,0x05,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x01,0x00,0x05},{0x00,0x00,0x05,0x00},{0x00,0x05,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x05,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x01},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x20,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x80,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x80,0x00},{0x00,0x00,0x80,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x01,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff,8);
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}


void TK2_8_2020_1402(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4], uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 2;
	trail_rounds = 16;
	uint8_t alpha_before_temp[20][4][4] = {\
	{{0x00,0x00,0x00,0x00},{0x00,0x40,0x40,0x10},{0x40,0x40,0x00,0x00},{0x40,0x00,0x00,0x00}},
	{{0x00,0x00,0x04,0x00},{0x00,0x00,0x00,0x00},{0x40,0x00,0x00,0x00},{0x00,0x00,0x04,0x04}},
	{{0x00,0x01,0x00,0x00},{0x00,0x00,0x05,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x01,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x20,0x00,0x00},{0x00,0x00,0x00,0x05},{0x00,0x20,0x00,0x00}},
	{{0x80,0x05,0x00,0x90},{0x00,0x00,0x00,0x90},{0x00,0x05,0x80,0x00},{0x00,0x05,0x00,0x90}},
	{{0x00,0x01,0x03,0x03},{0x03,0x01,0x00,0x02},{0x00,0x00,0x00,0x01},{0x01,0x01,0x00,0x03}},
	{{0x20,0x00,0x00,0x00},{0x00,0x20,0x20,0x20},{0xB0,0x00,0x20,0x00},{0x00,0x00,0x20,0x20}},
	{{0x00,0x93,0x00,0x00},{0x80,0x00,0x00,0x00},{0x00,0x00,0x00,0x80},{0x00,0x00,0x80,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x03,0x00,0x00}},
	{{0xBC,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x98,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x42},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x42},{0x00,0x00,0x00,0x42}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	uint8_t alpha_after_temp[20][4][4] = {\
	{{0x00,0x00,0x00,0x00},{0x00,0x04,0x04,0x40},{0x04,0x04,0x00,0x00},{0x04,0x00,0x00,0x00}},
	{{0x00,0x00,0x05,0x00},{0x00,0x00,0x00,0x00},{0x04,0x00,0x00,0x00},{0x00,0x00,0x01,0x01}},
	{{0x00,0x20,0x00,0x00},{0x00,0x00,0x05,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x20,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x80,0x00,0x00},{0x00,0x00,0x00,0x05},{0x00,0x80,0x00,0x00}},
	{{0x03,0x01,0x00,0x02},{0x00,0x00,0x00,0x02},{0x00,0x01,0x02,0x00},{0x00,0x01,0x00,0x03}},
	{{0x00,0x20,0x20,0x20},{0x20,0x20,0x00,0x09},{0x00,0x00,0x00,0x20},{0x20,0x20,0x00,0x20}},
	{{0x80,0x00,0x00,0x00},{0x00,0x80,0x80,0x80},{0x80,0x00,0x80,0x00},{0x00,0x00,0x93,0x80}},
	{{0x00,0xEA,0x00,0x00},{0x03,0x00,0x00,0x00},{0x00,0x00,0x00,0x03},{0x00,0x00,0x03,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0xBC,0x00,0x00}},
	{{0x4C,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x42,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x08},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x08},{0x00,0x00,0x00,0x08}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x77,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x39,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_before_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[trail_rounds][i][j] = alpha_after_temp[trail_rounds-1][i][j];}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	conversion(alpha,trail_rounds,key_diff,8);
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}



// 8 BIT SKINNY 
void getTK1_8_5Rounds(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4] ,uint32_t& trail_rounds, int &TK_NUM)
{
	// differentials: 14 --> {45,c5,d5} --> 05
	trail_rounds = 5;
	uint8_t alpha_temp[20][4][4] = {
	{{0x00,0x00,0x14,0x00},{0x00,0x14,0x00,0x00},{0x14,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}, {{0x00,0x00,0x00,0x00},{0x00,0x00,0x45,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}, {{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x05,0x00},{0x00,0x00,0x00,0x00}}, {{0x01,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x01,0x00,0x00,0x00},{0x01,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}, {{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}, {{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}, {{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}, {{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}, {{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}, {{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}, {{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	uint8_t key_diff_temp[4][4][4] = {{{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x05,0x00,0x00,0x00}},
									  {{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
									  {{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}},
									  {{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	TK_NUM = 1;
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}

void get_8TK2_2_18_L_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4] ,uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 2;
	trail_rounds = 12;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x00,0x20,0x20,0x00}},{{0x00,0x20,0x20,0x00}},{{0x00,0x20,0x00,0x20}},{{0x00,0x20,0x40,0x20}},
	{{0x80,0x04,0x00,0x80}},{{0x00,0x80,0x90,0x00}},{{0x00,0x80,0x80,0x00}},{{0x00,0x00,0x90,0x80}},
	{{0x00,0x00,0x02,0x00}},{{0x02,0x02,0x00,0x02}},{{0x02,0x00,0x02,0x00}},{{0x00,0x02,0x00,0x00}},
	{{0x04,0x00,0x00,0x00}},{{0x00,0x00,0x08,0x00}},{{0x00,0x08,0x00,0x00}},{{0x08,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x10}},
	{{0x00,0x00,0x50,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x08}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x10,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x10,0x00,0x00}},{{0x00,0x10,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t alpha_after_temp[20][4][4] = {
	{{0x00,0x80,0x90,0x00}},{{0x00,0x80,0x80,0x00}},{{0x00,0x80,0x00,0x80}},{{0x00,0x80,0x04,0x90}},
	{{0x02,0x05,0x00,0x02}},{{0x00,0x02,0x02,0x00}},{{0x00,0x02,0x02,0x00}},{{0x00,0x00,0x02,0x02}},
	{{0x00,0x00,0x08,0x00}},{{0x08,0x08,0x00,0x08}},{{0x08,0x00,0x08,0x00}},{{0x00,0x0c,0x00,0x00}},
	{{0x06,0x00,0x00,0x00}},{{0x00,0x00,0x10,0x00}},{{0x00,0x10,0x00,0x00}},{{0x10,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x50}},
	{{0x00,0x00,0x04,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x10}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x40,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x40,0x00,0x00}},{{0x00,0x40,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};	

	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0xf8}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x7f}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	TK_NUM = 1;
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}
void get_8TK2_2_18_U_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4] ,uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 2;
	trail_rounds = 12;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x20,0x00,0x00}},
	{{0x80,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x06,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x25}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x25}},{{0x00,0x00,0x00,0x25}},
	{{0x00,0x21,0x21,0x21}},{{0x00,0x00,0x00,0x21}},{{0x00,0x21,0x00,0x0a}},{{0x00,0x21,0x00,0x21}},
	{{0x28,0x14,0x00,0x80}},{{0x00,0x20,0x20,0xa0}},{{0x20,0x34,0x00,0x20}},{{0x00,0x14,0x20,0x80}},
	{{0xc2,0x41,0x83,0x91}},{{0x93,0x41,0x00,0xd0}},{{0x53,0x80,0x02,0xc1}},{{0x93,0xc1,0x80,0x91}},
	{{0x2c,0x02,0x2a,0x91}},{{0x0a,0xb4,0xe0,0x23}},{{0x0c,0x04,0x04,0x02}},{{0x02,0x00,0xc0,0x21}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t alpha_after_temp[20][4][4] = {
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x80,0x00,0x00}},
	{{0x03,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x25,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x21}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x21}},{{0x00,0x00,0x00,0x21}},
	{{0x00,0x20,0x20,0xa0}},{{0x00,0x00,0x00,0x20}},{{0x00,0x20,0x00,0x34}},{{0x00,0x28,0x00,0x20}},
	{{0x93,0x41,0x00,0xd0}},{{0x00,0x90,0x80,0x53}},{{0x80,0x41,0x00,0x80}},{{0x00,0x51,0x80,0x03}},
	{{0x0a,0xb4,0xe0,0x23}},{{0xb0,0x24,0x00,0x04}},{{0x20,0x02,0x08,0xb4}},{{0xb0,0x2e,0x02,0xea}},
	{{0x88,0x08,0x80,0x22}},{{0x10,0xa8,0x54,0x20}},{{0x18,0x01,0x01,0x08}},{{0x08,0x00,0x04,0x20}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x02,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x80,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	TK_NUM = 1;
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}
void get_8TK2_2_19_L_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4] ,uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 2;
	trail_rounds = 12;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x00,0x20,0x20,0x00}},{{0x00,0x20,0x20,0x00}},{{0x00,0x20,0x00,0x20}},{{0x00,0x20,0x40,0x20}},
	{{0x80,0x04,0x00,0x90}},{{0x00,0x80,0x80,0x00}},{{0x00,0x80,0x80,0x00}},{{0x00,0x00,0x80,0x90}},
	{{0x00,0x00,0x02,0x00}},{{0x02,0x02,0x00,0x02}},{{0x02,0x00,0x02,0x00}},{{0x00,0x02,0x00,0x00}},
	{{0x04,0x00,0x00,0x00}},{{0x00,0x00,0x08,0x00}},{{0x00,0x08,0x00,0x00}},{{0x08,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x10}},
	{{0x00,0x00,0x50,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x08}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x10,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x10,0x00,0x00}},{{0x00,0x10,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t alpha_after_temp[20][4][4] = {
	{{0x00,0x80,0x80,0x00}},{{0x00,0x80,0x90,0x00}},{{0x00,0x90,0x00,0x80}},{{0x00,0x80,0x04,0x80}},
	{{0x02,0x05,0x00,0x02}},{{0x00,0x02,0x02,0x00}},{{0x00,0x02,0x02,0x00}},{{0x00,0x00,0x02,0x02}},
	{{0x00,0x00,0x08,0x00}},{{0x08,0x08,0x00,0x08}},{{0x08,0x00,0x08,0x00}},{{0x00,0x0c,0x00,0x00}},
	{{0x06,0x00,0x00,0x00}},{{0x00,0x00,0x10,0x00}},{{0x00,0x10,0x00,0x00}},{{0x10,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x50}},
	{{0x00,0x00,0x04,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x10}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x40,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x40,0x00,0x00}},{{0x00,0x40,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0xf8}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x7f}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	TK_NUM = 1;
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}
void get_8TK2_2_19_U_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4] ,uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 2;
	trail_rounds = 13;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x00,0x20,0x00,0x00}},{{0x01,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x01}},{{0x00,0x00,0x01,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x20,0x00,0x00}},
	{{0x90,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x06,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x08}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x08}},{{0x00,0x00,0x00,0x08}},
	{{0x00,0xa8,0x10,0x39}},{{0x00,0x00,0x00,0x39}},{{0x00,0xa8,0x00,0x0a}},{{0x00,0xa8,0x00,0x39}},
	{{0xd0,0xc4,0x00,0xb0}},{{0x00,0xf9,0xd0,0x70}},{{0xc2,0x3d,0x00,0xc0}},{{0x00,0xc4,0xd0,0xb0}},
	{{0x05,0xc1,0xdc,0x05}},{{0x07,0x02,0x00,0xd3}},{{0x84,0x04,0xb0,0xd2}},{{0x07,0x06,0x5c,0x05}},
	{{0x90,0x3b,0x15,0x08}},{{0x21,0x2f,0x12,0x01}},{{0xb3,0x04,0x0e,0x01}},{{0xb1,0x23,0x14,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t alpha_after_temp[20][4][4] = {
	{{0x00,0x82,0x00,0x00}},{{0x20,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x20}},{{0x00,0x00,0x20,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x90,0x00,0x00}},
	{{0x03,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x08,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x39}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0xa8}},{{0x00,0x00,0x00,0x10}},
	{{0x00,0xf9,0xd0,0x70}},{{0x00,0x00,0x00,0xc2}},{{0x00,0xc0,0x00,0x3d}},{{0x00,0xd0,0x00,0xd0}},
	{{0x07,0x02,0x00,0xd3}},{{0x00,0xfe,0x04,0x84}},{{0x5c,0xd6,0x00,0x04}},{{0x00,0x02,0xc7,0x80}},
	{{0x21,0x2f,0x12,0x01}},{{0x08,0x08,0x00,0x23}},{{0x06,0x01,0x90,0x0c}},{{0x08,0x21,0x18,0x01}},
	{{0x02,0x60,0x61,0xa0}},{{0x20,0x85,0xc9,0xb0}},{{0xa6,0x01,0x11,0x20}},{{0xa0,0xa0,0x56,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x02,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x80,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	TK_NUM = 1;
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}
void get_8TK2_2_20_L_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4] ,uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 2;
	trail_rounds = 12;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x00,0x20,0x20,0x00}},{{0x00,0x20,0x20,0x00}},{{0x00,0x20,0x00,0x20}},{{0x00,0x20,0x40,0x20}},
	{{0x80,0x04,0x00,0x90}},{{0x00,0x80,0x80,0x00}},{{0x00,0x80,0x80,0x00}},{{0x00,0x00,0x80,0x90}},
	{{0x00,0x00,0x02,0x00}},{{0x02,0x02,0x00,0x02}},{{0x02,0x00,0x02,0x00}},{{0x00,0x02,0x00,0x00}},
	{{0x04,0x00,0x00,0x00}},{{0x00,0x00,0x08,0x00}},{{0x00,0x08,0x00,0x00}},{{0x08,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x10}},
	{{0x00,0x00,0x50,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x08}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x10,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x10,0x00,0x00}},{{0x00,0x10,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t alpha_after_temp[20][4][4] = {
	{{0x00,0x80,0x80,0x00}},{{0x00,0x80,0x90,0x00}},{{0x00,0x90,0x00,0x80}},{{0x00,0x80,0x04,0x80}},
	{{0x02,0x05,0x00,0x02}},{{0x00,0x02,0x02,0x00}},{{0x00,0x02,0x02,0x00}},{{0x00,0x00,0x02,0x02}},
	{{0x00,0x00,0x08,0x00}},{{0x08,0x08,0x00,0x08}},{{0x08,0x00,0x08,0x00}},{{0x00,0x0c,0x00,0x00}},
	{{0x06,0x00,0x00,0x00}},{{0x00,0x00,0x10,0x00}},{{0x00,0x10,0x00,0x00}},{{0x10,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x50}},
	{{0x00,0x00,0x04,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x10}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x40,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x40,0x00,0x00}},{{0x00,0x40,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0xf8}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x7f}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	TK_NUM = 1;
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}
void get_8TK2_2_20_U_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4] ,uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 2;
	trail_rounds = 14;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x04,0x00,0x00,0x00}},{{0x00,0x04,0x04,0x04}},{{0x04,0x00,0x04,0x00}},{{0x00,0x00,0x01,0x04}},
	{{0x00,0x20,0x00,0x00}},{{0x01,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x01}},{{0x00,0x00,0x01,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x20,0x00,0x00}},
	{{0x80,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x06,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x09}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x09}},{{0x00,0x00,0x00,0x09}},
	{{0x00,0x38,0x10,0x10}},{{0x00,0x00,0x00,0x10}},{{0x00,0x38,0x00,0x0a}},{{0x00,0x38,0x00,0x10}},
	{{0xc2,0xc0,0x82,0x30}},{{0x00,0xd0,0x40,0x50}},{{0xd0,0x10,0x00,0x60}},{{0x00,0xc0,0x40,0x30}},
	{{0x08,0x87,0x8f,0x00}},{{0x4e,0x07,0x0a,0x40}},{{0x04,0x84,0x00,0x04}},{{0x4e,0x83,0x4c,0x00}},
	{{0x44,0xa0,0x13,0x1a}},{{0x30,0x0a,0x12,0x00}},{{0x06,0xac,0x08,0x13}},{{0x30,0xb7,0x13,0x03}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t alpha_after_temp[20][4][4] = {
	{{0x01,0x00,0x00,0x00}},{{0x00,0x01,0x01,0x01}},{{0x01,0x00,0x01,0x00}},{{0x00,0x00,0x20,0x01}},
	{{0x00,0x82,0x00,0x00}},{{0x20,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x20}},{{0x00,0x00,0x20,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x80,0x00,0x00}},
	{{0x03,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x09,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x10}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x38}},{{0x00,0x00,0x00,0x10}},
	{{0x00,0xd0,0x40,0x50}},{{0x00,0x00,0x00,0xd0}},{{0x00,0x60,0x00,0x10}},{{0x00,0xc2,0x00,0xc2}},
	{{0x4e,0x07,0x0a,0x40}},{{0x00,0x54,0x44,0x04}},{{0x46,0x40,0x00,0x84}},{{0x00,0x46,0x04,0xc3}},
	{{0x30,0x0a,0x12,0x00}},{{0x11,0x09,0x10,0x06}},{{0x01,0x03,0x00,0xbd}},{{0x19,0x74,0x17,0x00}},
	{{0x01,0x82,0x60,0xc0}},{{0x40,0x10,0x49,0x00}},{{0x08,0x83,0xa8,0x60}},{{0x40,0x88,0xe2,0x28}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x02}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x40}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	TK_NUM = 1;
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}
void get_8TK2_2_21_L_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4] ,uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 2;
	trail_rounds = 13;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x00,0x00,0x00,0x00}},{{0x00,0x20,0x20,0x00}},{{0x00,0x20,0x00,0x00}},{{0x00,0x00,0x40,0x20}},
	{{0x00,0x04,0x00,0x80}},{{0x00,0x80,0x80,0x00}},{{0x00,0x80,0x00,0x00}},{{0x00,0x00,0x80,0x80}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x02,0x00,0x02}},{{0x00,0x00,0x02,0x00}},{{0x00,0x02,0x00,0x00}},
	{{0x04,0x00,0x00,0x00}},{{0x00,0x00,0x09,0x00}},{{0x00,0x08,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x10}},
	{{0x00,0x00,0x40,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x08}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x10,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x10,0x00,0x00}},{{0x00,0x10,0x00,0x00}},
	{{0x40,0x50,0x00,0x40}},{{0x00,0x50,0x00,0x00}},{{0x00,0x00,0x18,0x40}},{{0x00,0x50,0x00,0x40}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t alpha_after_temp[20][4][4] = {
	{{0x00,0x80,0x80,0x00}},{{0x00,0x80,0x80,0x00}},{{0x00,0x80,0x00,0x80}},{{0x00,0x80,0x04,0x80}},
	{{0x02,0x05,0x00,0x02}},{{0x00,0x02,0x02,0x00}},{{0x00,0x02,0x02,0x00}},{{0x00,0x00,0x02,0x00}},
	{{0x00,0x00,0x08,0x00}},{{0x08,0x08,0x00,0x08}},{{0x08,0x00,0x08,0x00}},{{0x00,0x0c,0x00,0x00}},
	{{0x06,0x00,0x00,0x00}},{{0x00,0x00,0x10,0x00}},{{0x00,0x10,0x00,0x00}},{{0x10,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x40}},
	{{0x00,0x00,0x04,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x10}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x50,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x40,0x00,0x00}},{{0x00,0x40,0x00,0x00}},
	{{0x04,0x04,0x00,0x04}},{{0x00,0x04,0x00,0x00}},{{0x00,0x00,0x40,0x04}},{{0x00,0x04,0x00,0x04}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0xf8}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x7f}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	TK_NUM = 1;
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}
void get_8TK2_2_21_U_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4] ,uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 2;
	trail_rounds = 14;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x04,0x00,0x00,0x00}},{{0x00,0x04,0x04,0x04}},{{0x04,0x00,0x04,0x00}},{{0x00,0x00,0x01,0x04}},
	{{0x00,0x20,0x00,0x00}},{{0x01,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x01}},{{0x00,0x00,0x01,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x20,0x00,0x00}},
	{{0x80,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x06,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x09}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x09}},{{0x00,0x00,0x00,0x09}},
	{{0x00,0x38,0x10,0x10}},{{0x00,0x00,0x00,0x10}},{{0x00,0x38,0x00,0x0a}},{{0x00,0x38,0x00,0x10}},
	{{0xc2,0xc0,0x82,0x30}},{{0x00,0xd0,0x40,0x50}},{{0xd0,0x10,0x00,0x60}},{{0x00,0xc0,0x40,0x30}},
	{{0x08,0x87,0x8f,0x00}},{{0x4e,0x07,0x0a,0x40}},{{0x04,0x84,0x00,0x04}},{{0x4e,0x83,0x4c,0x00}},
	{{0x44,0xa0,0x13,0x1a}},{{0x30,0x0a,0x12,0x00}},{{0x06,0xac,0x08,0x13}},{{0x30,0xb7,0x13,0x03}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t alpha_after_temp[20][4][4] = {
	{{0x01,0x00,0x00,0x00}},{{0x00,0x01,0x01,0x01}},{{0x01,0x00,0x01,0x00}},{{0x00,0x00,0x20,0x01}},
	{{0x00,0x82,0x00,0x00}},{{0x20,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x20}},{{0x00,0x00,0x20,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x80,0x00,0x00}},
	{{0x03,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x09,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x10}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x38}},{{0x00,0x00,0x00,0x10}},
	{{0x00,0xd0,0x40,0x50}},{{0x00,0x00,0x00,0xd0}},{{0x00,0x60,0x00,0x10}},{{0x00,0xc2,0x00,0xc2}},
	{{0x4e,0x07,0x0a,0x40}},{{0x00,0x54,0x44,0x04}},{{0x46,0x40,0x00,0x84}},{{0x00,0x46,0x04,0xc3}},
	{{0x30,0x0a,0x12,0x00}},{{0x11,0x09,0x10,0x06}},{{0x01,0x03,0x00,0xbd}},{{0x19,0x74,0x17,0x00}},
	{{0x01,0x82,0x60,0xc0}},{{0x40,0x10,0x49,0x00}},{{0x08,0x83,0xa8,0x60}},{{0x40,0x88,0xe2,0x28}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x02}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x40}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	TK_NUM = 1;
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}

void get_8TK3_1_22_L_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4] ,uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 3;
	trail_rounds = 14;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x01,0x21,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x01,0x00,0x00}},{{0x00,0x01,0x00,0x21}},
	{{0x00,0x20,0x20,0x20}},{{0x20,0x20,0x00,0x00}},{{0x00,0x00,0x00,0x20}},{{0x20,0x20,0x00,0x20}},
	{{0x90,0x00,0x00,0x00}},{{0x00,0x80,0x80,0x80}},{{0x8d,0x00,0x80,0x00}},{{0x00,0x00,0x80,0x80}},
	{{0x00,0xc0,0x00,0x00}},{{0x03,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x03}},{{0x00,0x00,0x43,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x20,0x00,0x00}},
	{{0x90,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x02}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x08,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x08,0x00,0x00}},{{0x00,0x08,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t alpha_after_temp[20][4][4] = {
	{{0x20,0x20,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x20,0x00,0x00}},{{0x00,0x20,0x00,0x20}},
	{{0x00,0x80,0x80,0x80}},{{0x80,0x80,0x00,0x00}},{{0x00,0x00,0x00,0x80}},{{0x80,0x90,0x00,0x80}},
	{{0x03,0x00,0x00,0x00}},{{0x00,0x43,0x03,0x03}},{{0x43,0x00,0x03,0x00}},{{0x00,0x00,0xc0,0x43}},
	{{0x00,0x07,0x00,0x00}},{{0x20,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x20}},{{0x00,0x00,0x20,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x90,0x00,0x00}},
	{{0x02,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x08}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x10,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x10,0x00,0x00}},{{0x00,0x10,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x54}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0xf3}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x7f}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	TK_NUM = 1;
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}
void get_8TK3_1_22_U_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4] ,uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 3;
	trail_rounds = 14;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x08,0x00,0x00}},
	{{0x10,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x40}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0xc4,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0xc4,0x00,0x00}},{{0x00,0xc4,0x00,0x00}},
	{{0x05,0x07,0x00,0x02}},{{0x00,0x07,0x00,0x00}},{{0x00,0x00,0x60,0x02}},{{0x00,0x07,0x00,0x02}},
	{{0x28,0x05,0x08,0x08}},{{0x01,0x0d,0x00,0x08}},{{0x94,0x08,0x28,0x00}},{{0x95,0x05,0x00,0x08}},
	{{0x05,0x01,0x02,0x50}},{{0x30,0x01,0x30,0x49}},{{0x20,0x20,0x34,0xa8}},{{0x00,0x01,0x1a,0xe1}},
	{{0x60,0xc9,0x28,0x84}},{{0x01,0x20,0x0c,0x04}},{{0x55,0x60,0x3a,0xc0}},{{0x40,0x90,0x8c,0x84}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t alpha_after_temp[20][4][4] = {
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x10,0x00,0x00}},
	{{0x40,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0xc4}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x07,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x02,0x00,0x00}},{{0x00,0x05,0x00,0x00}},
	{{0x01,0x0d,0x00,0x08}},{{0x00,0x28,0x00,0x00}},{{0x00,0x00,0x94,0x08}},{{0x00,0xbd,0x00,0x08}},
	{{0x30,0x01,0x30,0x38}},{{0x20,0x1e,0x00,0x10}},{{0x2a,0xa8,0x30,0x00}},{{0xb1,0x05,0x00,0x18}},
	{{0x01,0x20,0x0c,0x04}},{{0xd0,0xba,0x40,0x14}},{{0x80,0x80,0x41,0xb0}},{{0x00,0x20,0x59,0xa4}},
	{{0x44,0xad,0x30,0x03}},{{0xb8,0x80,0x11,0x28}},{{0xc1,0x84,0x40,0x04}},{{0xc6,0x02,0x13,0x03}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x2a,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x79,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x33,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	TK_NUM = 1;
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}
void get_8TK3_1_23_L_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4] ,uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 3;
	trail_rounds = 9;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x90,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x02}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x08,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x08,0x00,0x00}},{{0x00,0x08,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t alpha_after_temp[20][4][4] = {
	{{0x02,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x08}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x10,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x10,0x00,0x00}},{{0x00,0x10,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t key_diff_temp[4][4][4] = {
	{{0x54,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x99,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0xcf,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	TK_NUM = 1;
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}
void get_8TK3_1_23_U_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4] ,uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 3;
	trail_rounds = 15;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x00,0x11,0x00,0x00}},{{0x02,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x02}},{{0x00,0x00,0x02,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x08,0x00,0x00}},
	{{0x10,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x40}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x07,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x07,0x00,0x00}},{{0x00,0x07,0x00,0x00}},
	{{0x0c,0x08,0x00,0x28}},{{0x00,0x08,0x00,0x00}},{{0x00,0x00,0x60,0x28}},{{0x00,0x08,0x00,0x28}},
	{{0x2a,0x00,0x30,0x89}},{{0xad,0x30,0x00,0x89}},{{0x97,0x30,0x18,0x00}},{{0x3a,0x00,0x00,0x89}},
	{{0x56,0x00,0x40,0x6a}},{{0xb4,0x00,0x50,0x6a}},{{0x1a,0x4c,0x5b,0x40}},{{0x56,0x00,0x5b,0x2a}},
	{{0xe2,0x54,0x5c,0x00}},{{0xf2,0x00,0x04,0x30}},{{0x44,0xc5,0xc2,0x3c}},{{0xe2,0x44,0xc6,0x08}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t alpha_after_temp[20][4][4] = {
	{{0x00,0x60,0x00,0x00}},{{0x08,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x08}},{{0x00,0x00,0x08,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x10,0x00,0x00}},
	{{0x40,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x07}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x08,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x28,0x00,0x00}},{{0x00,0x0c,0x00,0x00}},
	{{0xad,0x30,0x00,0x89}},{{0x00,0x18,0x00,0x00}},{{0x00,0x00,0x97,0x30}},{{0x00,0x10,0x00,0x30}},
	{{0xb4,0x00,0x50,0x1b}},{{0x4c,0x50,0x00,0xf8}},{{0x0b,0x40,0xe2,0x00}},{{0x40,0x00,0x00,0x1b}},
	{{0xf2,0x00,0x04,0x30}},{{0x81,0x00,0x04,0x54}},{{0xc2,0x38,0x10,0x44}},{{0x08,0x00,0x10,0x9a}},
	{{0x8d,0x01,0x38,0x00}},{{0x8b,0x00,0x01,0x40}},{{0x41,0x03,0x0a,0x48}},{{0x8d,0x05,0x0b,0x10}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x2a,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x79,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x33,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	TK_NUM = 1;
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}
void get_8TK3_1_24_L_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4] ,uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 3;
	trail_rounds = 9;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x90,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x02}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x08,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x08,0x00,0x00}},{{0x00,0x08,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t alpha_after_temp[20][4][4] = {
	{{0x02,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x08}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x10,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x10,0x00,0x00}},{{0x00,0x10,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t key_diff_temp[4][4][4] = {
	{{0x54,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x99,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0xcf,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	TK_NUM = 1;
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}
void get_8TK3_1_24_U_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4] ,uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 3;
	trail_rounds = 16;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x80,0x00,0x00,0x00}},{{0x00,0x80,0x80,0x80}},{{0x80,0x00,0x80,0x00}},{{0x00,0x00,0x0c,0x80}},
	{{0x00,0x11,0x00,0x00}},{{0x02,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x02}},{{0x00,0x00,0x02,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x08,0x00,0x00}},
	{{0x10,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x40}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x04,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x04,0x00,0x00}},{{0x00,0x04,0x00,0x00}},
	{{0x29,0x01,0x00,0x01}},{{0x00,0x01,0x00,0x00}},{{0x00,0x00,0x60,0x01}},{{0x00,0x01,0x00,0x01}},
	{{0x24,0x90,0x20,0x20}},{{0x80,0x20,0x00,0x20}},{{0x84,0xb0,0x20,0x00}},{{0x04,0x90,0x00,0x20}},
	{{0x16,0x02,0x45,0x5b}},{{0x85,0x02,0x80,0xe3}},{{0x02,0x02,0xd5,0x90}},{{0x15,0x02,0xd5,0x73}},
	{{0x5d,0x4b,0x09,0xd9}},{{0x77,0x0d,0x21,0x10}},{{0x00,0x40,0x00,0x0a}},{{0x55,0x4e,0x29,0x18}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t alpha_after_temp[20][4][4] = {
	{{0x02,0x00,0x00,0x00}},{{0x00,0x02,0x02,0x02}},{{0x02,0x00,0x02,0x00}},{{0x00,0x00,0x11,0x02}},
	{{0x00,0x60,0x00,0x00}},{{0x08,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x08}},{{0x00,0x00,0x08,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x10,0x00,0x00}},
	{{0x40,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x04}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x01,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x01,0x00,0x00}},{{0x00,0x29,0x00,0x00}},
	{{0x80,0x20,0x00,0x20}},{{0x00,0x20,0x00,0x00}},{{0x00,0x00,0x84,0xb0}},{{0x00,0x20,0x00,0x20}},
	{{0x85,0x02,0x80,0x92}},{{0x02,0x80,0x00,0x92}},{{0x55,0x90,0x90,0x00}},{{0x28,0x03,0x00,0x90}},
	{{0x77,0x0d,0x21,0x10}},{{0x03,0x08,0x02,0x22}},{{0x08,0x08,0x22,0x43}},{{0xc1,0x08,0x05,0x20}},
	{{0x11,0x10,0x10,0xcc}},{{0x28,0x11,0x20,0x40}},{{0x00,0x04,0x00,0x10}},{{0x21,0x19,0x88,0x40}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x2a}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x3c}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x67}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	TK_NUM = 1;
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}
void get_8TK3_1_25_L_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4] ,uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 3;
	trail_rounds = 15;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x21,0x21,0x00,0x90}},{{0x00,0x00,0x80,0x00}},{{0x00,0xb1,0x00,0x00}},{{0x00,0x21,0x00,0x21}},
	{{0x00,0x20,0x20,0x20}},{{0x20,0x20,0x00,0x02}},{{0x00,0x00,0x00,0x20}},{{0x20,0x20,0x00,0x20}},
	{{0x90,0x00,0x00,0x00}},{{0x00,0x90,0x80,0x80}},{{0x84,0x00,0x80,0x00}},{{0x00,0x00,0x80,0x80}},
	{{0x00,0xd0,0x00,0x00}},{{0x03,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x03}},{{0x00,0x00,0x03,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x20,0x00,0x00}},
	{{0x80,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x02}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x08,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x08,0x00,0x00}},{{0x00,0x08,0x00,0x00}},
	{{0x10,0x10,0x00,0x10}},{{0x00,0x10,0x00,0x00}},{{0x00,0x00,0x07,0x10}},{{0x00,0x10,0x00,0x10}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t alpha_after_temp[20][4][4] = {
	{{0x20,0x20,0x00,0x02}},{{0x00,0x00,0x02,0x00}},{{0x00,0x22,0x00,0x00}},{{0x00,0x20,0x00,0x20}},
	{{0x00,0x90,0x80,0x80}},{{0x90,0x80,0x00,0x09}},{{0x00,0x00,0x00,0x90}},{{0x80,0x90,0x00,0x80}},
	{{0x03,0x00,0x00,0x00}},{{0x00,0x03,0x03,0x03}},{{0x03,0x00,0x03,0x00}},{{0x00,0x00,0xd0,0x03}},
	{{0x00,0x07,0x00,0x00}},{{0x20,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x20}},{{0x00,0x00,0x20,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x80,0x00,0x00}},
	{{0x02,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x08}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x10,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x10,0x00,0x00}},{{0x00,0x10,0x00,0x00}},
	{{0x50,0x50,0x00,0x40}},{{0x00,0x40,0x00,0x00}},{{0x00,0x00,0x08,0x40}},{{0x00,0x50,0x00,0x40}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x54}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0xf3}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x7f}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	TK_NUM = 1;
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}
void get_8TK3_1_25_U_2020_1317(uint8_t alpha[20][4][4], uint8_t key_diff[4][4][4] ,uint32_t& trail_rounds, int &TK_NUM)
{
	TK_NUM = 3;
	trail_rounds = 16;
	uint8_t alpha_before_temp[20][4][4] = {
	{{0x80,0x00,0x00,0x00}},{{0x00,0x80,0x80,0x80}},{{0x80,0x00,0x80,0x00}},{{0x00,0x00,0x0c,0x80}},
	{{0x00,0x11,0x00,0x00}},{{0x02,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x02}},{{0x00,0x00,0x02,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x08,0x00,0x00}},
	{{0x10,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x40}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x04,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x04,0x00,0x00}},{{0x00,0x04,0x00,0x00}},
	{{0x29,0x01,0x00,0x01}},{{0x00,0x01,0x00,0x00}},{{0x00,0x00,0x60,0x01}},{{0x00,0x01,0x00,0x01}},
	{{0x24,0x90,0x20,0x20}},{{0x80,0x20,0x00,0x20}},{{0x84,0xb0,0x20,0x00}},{{0x04,0x90,0x00,0x20}},
	{{0x16,0x02,0x45,0x5b}},{{0x85,0x02,0x80,0xe3}},{{0x02,0x02,0xd5,0x90}},{{0x15,0x02,0xd5,0x73}},
	{{0x5d,0x4b,0x09,0xd9}},{{0x77,0x0d,0x21,0x10}},{{0x00,0x40,0x00,0x0a}},{{0x55,0x4e,0x29,0x18}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t alpha_after_temp[20][4][4] = {
	{{0x02,0x00,0x00,0x00}},{{0x00,0x02,0x02,0x02}},{{0x02,0x00,0x02,0x00}},{{0x00,0x00,0x11,0x02}},
	{{0x00,0x60,0x00,0x00}},{{0x08,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x08}},{{0x00,0x00,0x08,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x10,0x00,0x00}},
	{{0x40,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x04}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x01,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x01,0x00,0x00}},{{0x00,0x29,0x00,0x00}},
	{{0x80,0x20,0x00,0x20}},{{0x00,0x20,0x00,0x00}},{{0x00,0x00,0x84,0xb0}},{{0x00,0x20,0x00,0x20}},
	{{0x85,0x02,0x80,0x92}},{{0x02,0x80,0x00,0x92}},{{0x55,0x90,0x90,0x00}},{{0x28,0x03,0x00,0x90}},
	{{0x77,0x0d,0x21,0x10}},{{0x03,0x08,0x02,0x22}},{{0x08,0x08,0x22,0x43}},{{0xc1,0x08,0x05,0x20}},
	{{0x11,0x10,0x10,0xcc}},{{0x28,0x11,0x20,0x40}},{{0x00,0x04,0x00,0x10}},{{0x21,0x19,0x88,0x40}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};

	uint8_t key_diff_temp[4][4][4] = {
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x2a}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x3c}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x67}},
	{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}},{{0x00,0x00,0x00,0x00}}};
	for (int r = 0; r < 20; r++) {for (int i = 0; i < 4; i++) { for (int j = 0; j < 4; j++) {alpha[r][i][j] = alpha_temp[r][i][j];}}}
	for (int i = 0; i < 4; i++){ for (int j = 0; j < 4; j++) { for (int k = 0; k < 4; k++) key_diff[i][j][k] = key_diff_temp[i][j][k];}}
	TK_NUM = 1;
	if (!sanityCheck(alpha,trail_rounds,key_diff,8))
	{
		std::cout << "Insanity!" << std::endl;
		exit(0);
	}
}

